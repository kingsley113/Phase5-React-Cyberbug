{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { hideToggle, showToggle } from \"../../actions/toggleActions\";\nimport { setActiveBug, editBug, deleteBug, resetActiveBug } from \"../../actions/bugActions\";\nimport { Redirect } from \"react-router\"; // import { analyzeText } from \"../../actions/tagActions\";\n\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BugDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bug: []\n    };\n\n    this.handleOnClickEdit = event => {\n      this.props.showToggle(\"newBugFormToggle\");\n    };\n\n    this.handleOnClickSquash = event => {\n      const bug = this.props.activeBug;\n      bug.bugStatus = \"Complete\";\n      bug.bugComplete = true;\n      this.props.editBug({\n        bug: bug\n      });\n    };\n\n    this.handleOnClickDelete = event => {\n      if (window.confirm(\"Are you sure you want to yeet this bug?\")) {\n        this.props.deleteBug(this.props.activeBug);\n      }\n    };\n  }\n\n  setBug() {\n    if (this.props.bugs) {\n      return this.props.bugs.filter(bug => {\n        return bug.bugId === this.props.match.params.bugId;\n      })[0];\n    } else {\n      return null;\n    }\n  }\n\n  renderBugDetails() {\n    if (this.props.bugs) {\n      const bug = this.setBug();\n\n      if (bug) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"details-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"stripe-separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"details-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", bug.bugStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: bug.bugDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Details:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: bug.bugDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Tags:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.renderTags()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Due Date: \", bug.bugDueDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Line No: \", bug.bugLineNo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Priority: \", bug.bugPriority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created: \", new Date(bug.created_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Updated: \", new Date(bug.updated_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delete-button-panel\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleOnClickDelete,\n                id: \"bug-delete-button\",\n                children: \"Delete Bug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.props.match.url.slice(0, -7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: \"Loading Info...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.activeBug) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bug-details-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"details-top-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"bug-id-stylized\",\n            children: this.props.match.params.bugId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"bug-title-stylized\",\n            children: this.props.activeBug.bugTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centered-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleOnClickEdit,\n              id: \"bug-edit-btn\",\n              children: \"Edit Bug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleOnClickSquash,\n              id: \"bug-squash-btn\",\n              children: \"Squash Bug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), this.renderBugDetails()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n  } // SET ACTIVE BUG ON LOAD AND UPDATE\n\n\n  componentDidMount() {\n    this.props.setActiveBug(this.setBug());\n  }\n\n  componentDidUpdate() {\n    this.props.setActiveBug(this.setBug());\n  }\n\n  componentWillUnmount() {\n    this.props.resetActiveBug();\n  } // EVENTS\n\n\n  // Render tags:\n  renderTags() {\n    if (this.props.activeBug) {\n      return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n        tags: this.props.activeBug.bugTags.split(\",\") // onChange={(newTags) =>\n        //   this.setState({ bugTags: newTags.join() })\n        // }\n        ,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this);\n    }\n  } // Watson Test Method\n  // textWatsonFetch = (event) => {\n  //   this.props.analyzeText(this.props.activeBug.bugDescription);\n  // };\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bugs: state.bugs.allBugs,\n    activeBug: state.bugs.activeBug\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveBug: bug => dispatch(setActiveBug(bug)),\n    resetActiveBug: () => dispatch(resetActiveBug()),\n    editBug: bug => dispatch(editBug(bug)),\n    deleteBug: bug => dispatch(deleteBug(bug)),\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id)) // analyzeText: (text) => dispatch(analyzeText(text)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BugDetails);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugDetails.js"],"names":["React","Component","connect","hideToggle","showToggle","setActiveBug","editBug","deleteBug","resetActiveBug","Redirect","ReactTagInput","BugDetails","state","bug","handleOnClickEdit","event","props","handleOnClickSquash","activeBug","bugStatus","bugComplete","handleOnClickDelete","window","confirm","setBug","bugs","filter","bugId","match","params","renderBugDetails","bugDescription","bugDetails","renderTags","bugDueDate","bugLineNo","bugPriority","Date","created_at","toLocaleString","updated_at","url","slice","render","bugTitle","componentDidMount","componentDidUpdate","componentWillUnmount","bugTags","split","mapStateToProps","allBugs","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { hideToggle, showToggle } from \"../../actions/toggleActions\";\nimport {\n  setActiveBug,\n  editBug,\n  deleteBug,\n  resetActiveBug,\n} from \"../../actions/bugActions\";\nimport { Redirect } from \"react-router\";\n// import { analyzeText } from \"../../actions/tagActions\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nclass BugDetails extends Component {\n  state = {\n    bug: [],\n  };\n\n  setBug() {\n    if (this.props.bugs) {\n      return this.props.bugs.filter((bug) => {\n        return bug.bugId === this.props.match.params.bugId;\n      })[0];\n    } else {\n      return null;\n    }\n  }\n\n  renderBugDetails() {\n    if (this.props.bugs) {\n      const bug = this.setBug();\n      if (bug) {\n        return (\n          <div id=\"details-panel\">\n            {/* TODO: This will have all of the detailed info */}\n            {/* <div className=\"centered-flex\" id=\"details-title\">\n              <h3>{bug.bugTitle}</h3>\n            </div> */}\n            <div id=\"stripe-separator\"></div>\n            <div id=\"details-container\">\n              <p>Status: {bug.bugStatus}</p>\n              <p>Description:</p>\n              <div>{bug.bugDescription}</div>\n              <p>Details:</p>\n              <div>{bug.bugDetails}</div>\n              <p>Tags:</p>\n              <div>\n                {/* {bug.bugTags} */}\n                {this.renderTags()}\n              </div>\n              <p>Due Date: {bug.bugDueDate}</p>\n              <p>Line No: {bug.bugLineNo}</p>\n              <p>Priority: {bug.bugPriority}</p>\n              <p>Created: {new Date(bug.created_at).toLocaleString()}</p>\n              <p>Updated: {new Date(bug.updated_at).toLocaleString()}</p>\n              <div id=\"delete-button-panel\">\n                <button\n                  onClick={this.handleOnClickDelete}\n                  id=\"bug-delete-button\"\n                >\n                  Delete Bug\n                </button>\n              </div>\n            </div>\n            {/* <button onClick={this.textWatsonFetch}>Test Watson</button> */}\n          </div>\n        );\n      } else {\n        return <Redirect to={this.props.match.url.slice(0, -7)} />;\n      }\n    } else {\n      <h3>Loading Info...</h3>;\n    }\n  }\n\n  render() {\n    if (this.props.activeBug) {\n      return (\n        <div id=\"bug-details-panel\">\n          <div id=\"details-top-panel\">\n            {/* <div>\n              <h2>Bug Details</h2>\n            </div> */}\n            <div id=\"bug-id-stylized\">{this.props.match.params.bugId}</div>\n            <div id=\"bug-title-stylized\">{this.props.activeBug.bugTitle}</div>\n            <div className=\"centered-flex\">\n              <button onClick={this.handleOnClickEdit} id=\"bug-edit-btn\">\n                Edit Bug\n              </button>\n              <button onClick={this.handleOnClickSquash} id=\"bug-squash-btn\">\n                Squash Bug\n              </button>\n            </div>\n          </div>\n          {this.renderBugDetails()}\n        </div>\n      );\n    } else {\n      return <h2>Loading</h2>;\n    }\n  }\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  componentDidMount() {\n    this.props.setActiveBug(this.setBug());\n  }\n  componentDidUpdate() {\n    this.props.setActiveBug(this.setBug());\n  }\n  componentWillUnmount() {\n    this.props.resetActiveBug();\n  }\n\n  // EVENTS\n  handleOnClickEdit = (event) => {\n    this.props.showToggle(\"newBugFormToggle\");\n  };\n\n  handleOnClickSquash = (event) => {\n    const bug = this.props.activeBug;\n    bug.bugStatus = \"Complete\";\n    bug.bugComplete = true;\n\n    this.props.editBug({ bug: bug });\n  };\n\n  handleOnClickDelete = (event) => {\n    if (window.confirm(\"Are you sure you want to yeet this bug?\")) {\n      this.props.deleteBug(this.props.activeBug);\n    }\n  };\n\n  // Render tags:\n  renderTags() {\n    if (this.props.activeBug) {\n      return (\n        <ReactTagInput\n          tags={this.props.activeBug.bugTags.split(\",\")}\n          // onChange={(newTags) =>\n          //   this.setState({ bugTags: newTags.join() })\n          // }\n          readOnly={true}\n        />\n      );\n    }\n  }\n  // Watson Test Method\n  // textWatsonFetch = (event) => {\n  //   this.props.analyzeText(this.props.activeBug.bugDescription);\n  // };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bugs: state.bugs.allBugs,\n    activeBug: state.bugs.activeBug,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveBug: (bug) => dispatch(setActiveBug(bug)),\n    resetActiveBug: () => dispatch(resetActiveBug()),\n    editBug: (bug) => dispatch(editBug(bug)),\n    deleteBug: (bug) => dispatch(deleteBug(bug)),\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n    // analyzeText: (text) => dispatch(analyzeText(text)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BugDetails);\n"]},"metadata":{},"sourceType":"module"}