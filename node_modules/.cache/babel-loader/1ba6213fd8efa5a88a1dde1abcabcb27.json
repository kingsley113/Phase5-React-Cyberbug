{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js\";\nimport React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectStatus extends Component {\n  render() {\n    console.log(this.props.project);\n\n    if (this.props.project && this.props.bugs) {\n      return /*#__PURE__*/_jsxDEV(ProgressBar, {\n        id: \"project-progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"warning\",\n          now: this.calcProgressChartData()[0],\n          label: \"Open\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"danger\",\n          now: this.calcProgressChartData()[1],\n          label: \"Overdue\"\n        }, 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\",\n          now: this.calcProgressChartData()[2],\n          label: \"Closed\"\n        }, 3, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(this.props.project, this.props.bugs);\n      return data;\n    }\n  }\n\n}\n\nexport default ProjectStatus;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js"],"names":["React","Component","ProgressBar","generateProjectStatusBarData","ProjectStatus","render","console","log","props","project","bugs","calcProgressChartData","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,4BAAT,QAA6C,8BAA7C;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;;AACA,QAAI,KAAKD,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,0BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,sBAAhB;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,SAFV;AAGE,UAAA,GAAG,EAAE,KAAKC,qBAAL,GAA6B,CAA7B,CAHP;AAKE,UAAA,KAAK,EAAC;AALR,WAIO,CAJP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,QAFV;AAGE,UAAA,GAAG,EAAE,KAAKA,qBAAL,GAA6B,CAA7B,CAHP;AAKE,UAAA,KAAK,EAAC;AALR,WAIO,CAJP;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,SAFV;AAGE,UAAA,GAAG,EAAE,KAAKA,qBAAL,GAA6B,CAA7B,CAHP;AAKE,UAAA,KAAK,EAAC;AALR,WAIO,CAJP;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BD,MA0BO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAEDA,EAAAA,qBAAqB,GAAG;AACtB,QAAI,KAAKH,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,YAAME,IAAI,GAAGT,4BAA4B,CACvC,KAAKK,KAAL,CAAWC,OAD4B,EAEvC,KAAKD,KAAL,CAAWE,IAF4B,CAAzC;AAIA,aAAOE,IAAP;AACD;AACF;;AA1CmC;;AA6CtC,eAAeR,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\";\n\nclass ProjectStatus extends Component {\n  render() {\n    console.log(this.props.project);\n    if (this.props.project && this.props.bugs) {\n      return (\n        <ProgressBar id=\"project-progress-bar\">\n          <ProgressBar\n            striped\n            variant=\"warning\"\n            now={this.calcProgressChartData()[0]}\n            key={1}\n            label=\"Open\"\n          />\n          <ProgressBar\n            striped\n            variant=\"danger\"\n            now={this.calcProgressChartData()[1]}\n            key={2}\n            label=\"Overdue\"\n          />\n          <ProgressBar\n            striped\n            variant=\"success\"\n            now={this.calcProgressChartData()[2]}\n            key={3}\n            label=\"Closed\"\n          />\n        </ProgressBar>\n      );\n    } else {\n      return <p>Loading Chart</p>;\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(\n        this.props.project,\n        this.props.bugs\n      );\n      return data;\n    }\n  }\n}\n\nexport default ProjectStatus;\n"]},"metadata":{},"sourceType":"module"}