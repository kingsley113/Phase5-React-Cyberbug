{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-border\",\n      id: \"priority-tasks-panel\",\n      children: [\"--This is the priority tasks component :)\", /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bug Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderPriorityTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderPriorityTableRows() {\n    // console.log(this.props.bugs);\n    // create array sorted by priority\n    // then sort within each priority by due date\n    let elements = [];\n\n    if (this.props.bugs) {\n      let criticalBugs = this.props.bugs.map((bug, index) => {\n        if (bug.bugPriority === \"Critical\") {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.bugId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.bugtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.bugPriority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.bugDueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.bugStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bug.project_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this);\n        }\n      });\n      criticalBugs.sort((firstBug, secondBug) => {\n        console.log(firstBug.bugDueDate);\n        console.log(new Date(firstBug.bugDueDate));\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      elements.push(criticalBugs);\n      return elements;\n    }\n  }\n\n}\n\nexport default PriorityTasks;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js"],"names":["React","Component","PriorityTasks","render","renderPriorityTableRows","elements","props","bugs","criticalBugs","map","bug","index","bugPriority","bugId","bugtitle","bugDueDate","bugStatus","project_id","sort","firstBug","secondBug","console","log","Date","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,sBAAhC;AAAA,2EAGE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,oBAAQ,KAAKC,uBAAL;AAAR;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAEDA,EAAAA,uBAAuB,GAAG;AACxB;AACA;AACA;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACnB,UAAIC,YAAY,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrD,YAAID,GAAG,CAACE,WAAJ,KAAoB,UAAxB,EAAoC;AAClC,8BACE;AAAA,oCACE;AAAA,wBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKH,GAAG,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKJ,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKF,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKL,GAAG,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,wBAAKN,GAAG,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA,aAASN,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD;AACF,OAbkB,CAAnB;AAeAH,MAAAA,YAAY,CAACU,IAAb,CAAkB,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACJ,UAArB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASJ,QAAQ,CAACJ,UAAlB,CAAZ;AACA,eAAO,IAAIQ,IAAJ,CAASJ,QAAQ,CAACJ,UAAlB,IAAgC,IAAIQ,IAAJ,CAASH,SAAS,CAACL,UAAnB,CAAvC;AACD,OAJD;AAMAV,MAAAA,QAAQ,CAACmB,IAAT,CAAchB,YAAd;AACA,aAAOH,QAAP;AACD;AACF;;AArDmC;;AAwDtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return (\n      <div className=\"test-border\" id=\"priority-tasks-panel\">\n        --This is the priority tasks component :)\n        {/* TODO: fill in content */}\n        <table>\n          <thead>\n            <tr>\n              <th>Bug Id</th>\n              <th>Title</th>\n              <th>Priority</th>\n              <th>Due Date</th>\n              <th>Status</th>\n              <th>Project</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderPriorityTableRows()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderPriorityTableRows() {\n    // console.log(this.props.bugs);\n    // create array sorted by priority\n    // then sort within each priority by due date\n    let elements = [];\n    if (this.props.bugs) {\n      let criticalBugs = this.props.bugs.map((bug, index) => {\n        if (bug.bugPriority === \"Critical\") {\n          return (\n            <tr key={index}>\n              <td>{bug.bugId}</td>\n              <td>{bug.bugtitle}</td>\n              <td>{bug.bugPriority}</td>\n              <td>{bug.bugDueDate}</td>\n              <td>{bug.bugStatus}</td>\n              <td>{bug.project_id}</td>\n            </tr>\n          );\n        }\n      });\n\n      criticalBugs.sort((firstBug, secondBug) => {\n        console.log(firstBug.bugDueDate);\n        console.log(new Date(firstBug.bugDueDate));\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n\n      elements.push(criticalBugs);\n      return elements;\n    }\n  }\n}\n\nexport default PriorityTasks;\n"]},"metadata":{},"sourceType":"module"}