{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/projectForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject, editProject } from \"../../actions/projectActions\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projectId: RandomIdGenerator.createBase36(6),\n      projectTitle: \"\",\n      projectDescription: \"\",\n      user_id: JSON.parse(localStorage.current_user).id\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n\n      if (this.props.cleanForm) {\n        // Reset the clean form status after submitting\n        this.props.renderCleanForm(false);\n        this.props.createProject(this.state);\n      } else {\n        this.props.editProject(this.state);\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.props.renderCleanForm(false);\n      this.props.hideToggle(\"newProjectFormToggle\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        id: \"project-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"project-form-id-stylized\",\n          children: this.state.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"project-form-title-stylized\",\n          children: this.state.projectTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          id: \"project-title-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectTitle\",\n            className: \"col-sm-1 right-align-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"projectTitle\",\n            className: \"col-lg-3\",\n            value: this.state.projectTitle,\n            onChange: this.handleOnChange,\n            required: true,\n            placeholder: \"Project title (required)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectDescription\",\n            className: \"col-sm-1 right-align-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"projectDescription\",\n            value: this.state.projectDescription,\n            onChange: this.handleOnChange,\n            placeholder: \"Enter project description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row form-btn-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Save Project\",\n            className: \"form-save-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleOnClick,\n            className: \"form-cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } // LOAD PROJECT DATA IF EXISTING PROJECT IS LOADED\n\n\n  componentDidMount() {\n    console.log(\"Project Form mounted!\");\n\n    if (this.props.activeProject && !this.props.cleanForm) {\n      this.loadFormData();\n    }\n  } // componentDidUpdate() {\n  //   if (this.props.activeProject && !this.props.cleanForm) {\n  //     this.loadFormData();\n  //   }\n  // }\n\n\n  loadFormData() {\n    const proj = this.props.activeProject; // console.log(proj);\n\n    this.setState({\n      id: proj.id\n    });\n\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: proj[prop] ? proj[prop] : \"\"\n      });\n    }\n  } // EVENTS\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeProject: state.projects.activeProject,\n    cleanForm: state.forms.renderCleanForm\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: projectObject => dispatch(createProject(projectObject)),\n    editProject: project => dispatch(editProject(project)),\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id)),\n    renderCleanForm: bool => dispatch(renderCleanForm(bool))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/projectForm.js"],"names":["React","Component","connect","createProject","editProject","showToggle","hideToggle","renderCleanForm","RandomIdGenerator","ProjectForm","state","projectId","createBase36","projectTitle","projectDescription","user_id","JSON","parse","localStorage","current_user","id","handleOnSubmit","event","preventDefault","props","cleanForm","handleOnChange","setState","target","name","value","handleOnClick","render","componentDidMount","console","log","activeProject","loadFormData","proj","prop","mapStateToProps","projects","forms","mapDispatchToProps","dispatch","projectObject","project","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject, editProject } from \"../../actions/projectActions\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\n\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\n\nclass ProjectForm extends Component {\n  state = {\n    projectId: RandomIdGenerator.createBase36(6),\n    projectTitle: \"\",\n    projectDescription: \"\",\n    user_id: JSON.parse(localStorage.current_user).id,\n  };\n\n  render() {\n    return (\n      <div>\n        {/* {console.log(this.state)} */}\n        {/* <h2>Create a new project:</h2> */}\n        <form onSubmit={this.handleOnSubmit} id=\"project-form\">\n          <div id=\"project-form-id-stylized\">{this.state.projectId}</div>\n          <div id=\"project-form-title-stylized\">{this.state.projectTitle}</div>\n          {/* <label htmlFor=\"projectId\" className=\"col-sm-1 right-align-text\">\n              Project ID:\n            </label> */}\n          {/* <span name=\"projectId\" className=\"col-sm-1\">\n              {this.state.projectId}\n            </span> */}\n          <div className=\"row\" id=\"project-title-row\">\n            <label htmlFor=\"projectTitle\" className=\"col-sm-1 right-align-text\">\n              <b>Title:</b>\n            </label>\n            <input\n              type=\"text\"\n              name=\"projectTitle\"\n              className=\"col-lg-3\"\n              value={this.state.projectTitle}\n              onChange={this.handleOnChange}\n              required\n              placeholder=\"Project title (required)\"\n            />\n          </div>\n          <div className=\"row\">\n            <label\n              htmlFor=\"projectDescription\"\n              className=\"col-sm-1 right-align-text\"\n            >\n              <b>Description:</b>\n            </label>\n            <textarea\n              name=\"projectDescription\"\n              value={this.state.projectDescription}\n              onChange={this.handleOnChange}\n              placeholder=\"Enter project description\"\n            ></textarea>\n          </div>\n          <div className=\"row form-btn-row\">\n            <input\n              type=\"submit\"\n              value=\"Save Project\"\n              className=\"form-save-btn\"\n            />\n            <button onClick={this.handleOnClick} className=\"form-cancel-btn\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  // LOAD PROJECT DATA IF EXISTING PROJECT IS LOADED\n  componentDidMount() {\n    console.log(\"Project Form mounted!\");\n    if (this.props.activeProject && !this.props.cleanForm) {\n      this.loadFormData();\n    }\n  }\n\n  // componentDidUpdate() {\n  //   if (this.props.activeProject && !this.props.cleanForm) {\n  //     this.loadFormData();\n  //   }\n  // }\n\n  loadFormData() {\n    const proj = this.props.activeProject;\n    // console.log(proj);\n\n    this.setState({ id: proj.id });\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: proj[prop] ? proj[prop] : \"\",\n      });\n    }\n  }\n\n  // EVENTS\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (this.props.cleanForm) {\n      // Reset the clean form status after submitting\n      this.props.renderCleanForm(false);\n      this.props.createProject(this.state);\n    } else {\n      this.props.editProject(this.state);\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnClick = (event) => {\n    this.props.renderCleanForm(false);\n    this.props.hideToggle(\"newProjectFormToggle\");\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeProject: state.projects.activeProject,\n    cleanForm: state.forms.renderCleanForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (projectObject) => dispatch(createProject(projectObject)),\n    editProject: (project) => dispatch(editProject(project)),\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n    renderCleanForm: (bool) => dispatch(renderCleanForm(bool)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\n"]},"metadata":{},"sourceType":"module"}