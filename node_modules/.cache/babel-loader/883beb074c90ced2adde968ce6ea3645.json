{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newProjectForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewProjectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projectId: RandomIdGenerator.createBase36(6),\n      projectTitle: \"\",\n      projectDescription: \"\"\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.createProject(this.state);\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.props.hideToggle(\"newProjectFormToggle\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new project:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectId\",\n            className: \"col-sm-1 right-align-text\",\n            children: \"Project ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            name: \"projectId\",\n            className: \"col-sm-1\",\n            children: this.state.projectId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectTitle\",\n            className: \"col-sm-1 right-align-text\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"projectTitle\",\n            className: \"col-lg-3\",\n            value: this.state.projectTitle,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectDescription\",\n            className: \"col-sm-1 right-align-text\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"projectDescription\",\n            value: this.state.projectDescription,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleOnClick,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), this.renderDeleteButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderDeleteButton() {\n    if (this.props.activeProject) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    } else {\n      return null;\n    }\n  } // LOAD FORM DATA IF EXISTING BUG\n\n\n  componentDidMount() {\n    if (this.props.activeProject && !this.props.cleanForm) {\n      this.loadFormData();\n    } // Reset the clean form status after rendering\n\n\n    this.props.renderCleanForm(false);\n  }\n\n  loadFormData() {\n    const proj = this.props.activeProject;\n    this.setState({\n      id: proj.id\n    });\n\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: proj[prop] ? proj[prop] : \"\"\n      });\n    }\n  } // EVENTS\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeProject: state.projects.activeProject,\n    cleanForm: state.forms.renderCleanForm\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: projectObject => dispatch(createProject(projectObject)),\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id)),\n    renderCleanForm: bool => dispatch(renderCleanForm(bool))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProjectForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newProjectForm.js"],"names":["React","Component","connect","createProject","showToggle","hideToggle","renderCleanForm","RandomIdGenerator","NewProjectForm","state","projectId","createBase36","projectTitle","projectDescription","handleOnSubmit","event","preventDefault","props","handleOnChange","setState","target","name","value","handleOnClick","render","renderDeleteButton","activeProject","componentDidMount","cleanForm","loadFormData","proj","id","prop","mapStateToProps","projects","forms","mapDispatchToProps","dispatch","projectObject","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\n\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\n\nclass NewProjectForm extends Component {\n  state = {\n    projectId: RandomIdGenerator.createBase36(6),\n    projectTitle: \"\",\n    projectDescription: \"\",\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new project:</h2>\n        <form onSubmit={this.handleOnSubmit}>\n          <div className=\"row\">\n            <label htmlFor=\"projectId\" className=\"col-sm-1 right-align-text\">\n              Project ID:\n            </label>\n            {/* <input\n              type=\"text\"\n              name=\"projectId\"\n              className=\"col-sm-1\"\n              value={this.state.projectId}\n              onChange={this.handleOnChange}\n            /> */}\n            <span name=\"projectId\" className=\"col-sm-1\">\n              {this.state.projectId}\n            </span>\n            <label htmlFor=\"projectTitle\" className=\"col-sm-1 right-align-text\">\n              Title:\n            </label>\n            <input\n              type=\"text\"\n              name=\"projectTitle\"\n              className=\"col-lg-3\"\n              value={this.state.projectTitle}\n              onChange={this.handleOnChange}\n            />\n          </div>\n          <div className=\"row\">\n            <label\n              htmlFor=\"projectDescription\"\n              className=\"col-sm-1 right-align-text\"\n            >\n              Description:\n            </label>\n            <textarea\n              name=\"projectDescription\"\n              value={this.state.projectDescription}\n              onChange={this.handleOnChange}\n            ></textarea>\n          </div>\n          <div className=\"row\">\n            <input type=\"submit\" value=\"Create Project\" />\n            <button onClick={this.handleOnClick}>Cancel</button>\n            {this.renderDeleteButton()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  renderDeleteButton() {\n    if (this.props.activeProject) {\n      return <button>Delete</button>;\n    } else {\n      return null;\n    }\n  }\n\n  // LOAD FORM DATA IF EXISTING BUG\n  componentDidMount() {\n    if (this.props.activeProject && !this.props.cleanForm) {\n      this.loadFormData();\n    }\n    // Reset the clean form status after rendering\n    this.props.renderCleanForm(false);\n  }\n\n  loadFormData() {\n    const proj = this.props.activeProject;\n\n    this.setState({ id: proj.id });\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: proj[prop] ? proj[prop] : \"\",\n      });\n    }\n  }\n\n  // EVENTS\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.props.createProject(this.state);\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnClick = (event) => {\n    this.props.hideToggle(\"newProjectFormToggle\");\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeProject: state.projects.activeProject,\n    cleanForm: state.forms.renderCleanForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (projectObject) => dispatch(createProject(projectObject)),\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n    renderCleanForm: (bool) => dispatch(renderCleanForm(bool)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProjectForm);\n"]},"metadata":{},"sourceType":"module"}