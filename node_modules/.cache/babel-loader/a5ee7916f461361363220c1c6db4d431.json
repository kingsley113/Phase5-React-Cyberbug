{"ast":null,"code":"function projects(state = {\n  projects: []\n}, action) {\n  switch (action.type) {\n    case \"ADD_PROJECT\":\n      return {\n        projects: state.concat(action.project)\n      };\n\n    case \"LOAD_PROJECTS\":\n      return {\n        projects: state.projects.concat(action.projects)\n      };\n\n    case \"EDIT_PROJECT\":\n      return state;\n\n    case \"DELETE_PROJECT\":\n      return state;\n\n    case \"ADD_BUG_TO_PROJECT\":\n      return state;\n\n    case \"REMOVE_BUG_FROM_PROJECT\":\n      return state;\n\n    case \"SET_ACTIVE_PROJECT\":\n      let activeProject = null;\n      const updatedProjects = [...state].map(project => {\n        project.activeProject = false;\n\n        if (project.id === parseInt(action.id)) {\n          project.activeProject = true;\n          activeProject = project;\n        }\n\n        return project;\n      });\n      return {\n        projects: updatedProjects,\n        activeProject: activeProject\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projects;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/reducers/projectsReducer.js"],"names":["projects","state","action","type","concat","project","activeProject","updatedProjects","map","id","parseInt"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,KAAK,GAAG;AAAED,EAAAA,QAAQ,EAAE;AAAZ,CAA1B,EAA4CE,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AAAEH,QAAAA,QAAQ,EAAEC,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,OAApB;AAAZ,OAAP;;AACF,SAAK,eAAL;AACE,aAAO;AAAEL,QAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeI,MAAf,CAAsBF,MAAM,CAACF,QAA7B;AAAZ,OAAP;;AACF,SAAK,cAAL;AACE,aAAOC,KAAP;;AACF,SAAK,gBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,oBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,yBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,oBAAL;AACE,UAAIK,aAAa,GAAG,IAApB;AACA,YAAMC,eAAe,GAAG,CAAC,GAAGN,KAAJ,EAAWO,GAAX,CAAgBH,OAAD,IAAa;AAClDA,QAAAA,OAAO,CAACC,aAAR,GAAwB,KAAxB;;AACA,YAAID,OAAO,CAACI,EAAR,KAAeC,QAAQ,CAACR,MAAM,CAACO,EAAR,CAA3B,EAAwC;AACtCJ,UAAAA,OAAO,CAACC,aAAR,GAAwB,IAAxB;AACAA,UAAAA,aAAa,GAAGD,OAAhB;AACD;;AACD,eAAOA,OAAP;AACD,OAPuB,CAAxB;AAQA,aAAO;AAAEL,QAAAA,QAAQ,EAAEO,eAAZ;AAA6BD,QAAAA,aAAa,EAAEA;AAA5C,OAAP;;AACF;AACE,aAAOL,KAAP;AAzBJ;AA2BD;;AAED,eAAeD,QAAf","sourcesContent":["function projects(state = { projects: [] }, action) {\n  switch (action.type) {\n    case \"ADD_PROJECT\":\n      return { projects: state.concat(action.project) };\n    case \"LOAD_PROJECTS\":\n      return { projects: state.projects.concat(action.projects) };\n    case \"EDIT_PROJECT\":\n      return state;\n    case \"DELETE_PROJECT\":\n      return state;\n    case \"ADD_BUG_TO_PROJECT\":\n      return state;\n    case \"REMOVE_BUG_FROM_PROJECT\":\n      return state;\n    case \"SET_ACTIVE_PROJECT\":\n      let activeProject = null;\n      const updatedProjects = [...state].map((project) => {\n        project.activeProject = false;\n        if (project.id === parseInt(action.id)) {\n          project.activeProject = true;\n          activeProject = project;\n        }\n        return project;\n      });\n      return { projects: updatedProjects, activeProject: activeProject };\n    default:\n      return state;\n  }\n}\n\nexport default projects;\n"]},"metadata":{},"sourceType":"module"}