{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectsPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProjectListDetailed from \"../../components/dashboard/projectListDetailed\";\nimport BugList from \"../../components/project/bugList\";\nimport { setActiveProject } from \"../../actions/projectActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectsPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProjectListDetailed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BugList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  setProject() {\n    console.log(this.props.match);\n\n    if (this.props.projects) {\n      return this.props.projects.filter(project => {\n        return project.projectId === this.props.match.params.projectId;\n      })[0];\n    } else {\n      return null;\n    }\n  } // SET ACTIVE BUG ON LOAD AND UPDATE\n\n\n  componentDidMount() {\n    // TODO: error here on loading data, needs to trigger after data loaded\n    this.props.setActiveProject(this.setProject());\n  }\n\n  componentDidUpdate() {\n    // TODO: error here on loading data, needs to trigger after data loaded\n    this.props.setActiveProject(this.setProject());\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveProject: project => dispatch(setActiveProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectsPage);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectsPage.js"],"names":["React","Component","connect","ProjectListDetailed","BugList","setActiveProject","ProjectsPage","render","setProject","console","log","props","match","projects","filter","project","projectId","params","componentDidMount","componentDidUpdate","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDC,EAAAA,UAAU,GAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;;AACA,QAAI,KAAKD,KAAL,CAAWE,QAAf,EAAyB;AACvB,aAAO,KAAKF,KAAL,CAAWE,QAAX,CAAoBC,MAApB,CAA4BC,OAAD,IAAa;AAC7C,eAAOA,OAAO,CAACC,SAAR,KAAsB,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAwBD,SAArD;AACD,OAFM,EAEJ,CAFI,CAAP;AAGD,KAJD,MAIO;AACL,aAAO,IAAP;AACD;AACF,GAnBkC,CAqBnC;;;AACAE,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKP,KAAL,CAAWN,gBAAX,CAA4B,KAAKG,UAAL,EAA5B;AACD;;AACDW,EAAAA,kBAAkB,GAAG;AACnB;AACA,SAAKR,KAAL,CAAWN,gBAAX,CAA4B,KAAKG,UAAL,EAA5B;AACD;;AA7BkC;;AAgCrC,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,gBAAgB,EAAGU,OAAD,IAAaM,QAAQ,CAAChB,gBAAgB,CAACU,OAAD,CAAjB;AADlC,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCd,YAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProjectListDetailed from \"../../components/dashboard/projectListDetailed\";\nimport BugList from \"../../components/project/bugList\";\n\nimport { setActiveProject } from \"../../actions/projectActions\";\n\nclass ProjectsPage extends Component {\n  render() {\n    return (\n      <div>\n        <ProjectListDetailed />\n        <BugList />\n      </div>\n    );\n  }\n\n  setProject() {\n    console.log(this.props.match);\n    if (this.props.projects) {\n      return this.props.projects.filter((project) => {\n        return project.projectId === this.props.match.params.projectId;\n      })[0];\n    } else {\n      return null;\n    }\n  }\n\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  componentDidMount() {\n    // TODO: error here on loading data, needs to trigger after data loaded\n    this.props.setActiveProject(this.setProject());\n  }\n  componentDidUpdate() {\n    // TODO: error here on loading data, needs to trigger after data loaded\n    this.props.setActiveProject(this.setProject());\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveProject: (project) => dispatch(setActiveProject(project)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectsPage);\n"]},"metadata":{},"sourceType":"module"}