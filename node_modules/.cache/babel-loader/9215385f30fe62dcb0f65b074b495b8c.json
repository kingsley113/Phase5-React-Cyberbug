{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectPage.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { setActiveProject, deleteProject } from \"../../actions/projectActions\";\nimport BugList from \"../../components/project/bugList\";\nimport BugDetails from \"../../components/project/bugDetails\";\nimport BugForm from \"../../components/forms/bugForm\";\nimport ModalWindow from \"../modalWindow\";\nimport Toggle from \"../toggle\";\nimport ProjectHeader from \"../../components/project/projectHeader\";\nimport { Redirect, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectPage extends PureComponent {\n  render() {\n    if (this.props.projects) {\n      const project = this.setProject();\n\n      if (project) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"project-page\",\n          children: [/*#__PURE__*/_jsxDEV(Toggle, {\n            id: \"newBugFormToggle\",\n            children: /*#__PURE__*/_jsxDEV(ModalWindow, {\n              component: /*#__PURE__*/_jsxDEV(BugForm, {\n                project: project\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"project-left-column\",\n            children: [/*#__PURE__*/_jsxDEV(ProjectHeader, {\n              project: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"bugs-list-panel\",\n              children: /*#__PURE__*/_jsxDEV(BugList, {\n                route: this.props.match.url,\n                project: project\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-border-blue\",\n            id: \"project-right-column\",\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: this.props.match.url,\n              render: () => /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Please select a Bug from the list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: `${this.props.match.url}/:bugId`,\n              render: routerProps => /*#__PURE__*/_jsxDEV(BugDetails, { ...routerProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.props.match.url.slice(0, -7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  setProject() {\n    if (this.props.projects) {\n      return this.props.projects.filter(project => {\n        return project.projectId === this.props.match.params.id;\n      })[0];\n    } else {\n      return null;\n    }\n  } // SET ACTIVE BUG ON LOAD AND UPDATE\n\n\n  componentDidMount() {\n    this.props.setActiveProject(this.setProject());\n  }\n\n  componentDidUpdate() {\n    this.props.setActiveProject(this.setProject());\n  }\n\n  componentWillUnmount() {\n    this.props.resetActiveProject;\n  } // EVENTS\n  // handleOnClickDelete = (event) => {\n  //   // console.log(\"delete button clicked\");\n  //   if (window.confirm(\"Are you sure you want to yeet this project?\")) {\n  //     if (\n  //       window.confirm(\n  //         \"Are you really sure?? Theres no turning back after deleting...\"\n  //       )\n  //     ) {\n  //       this.props.deleteProject(this.props.activeProject);\n  //     }\n  //   }\n  // };\n\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id)),\n    setActiveProject: project => dispatch(setActiveProject(project)),\n    deleteProject: project => dispatch(deleteProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectPage);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectPage.js"],"names":["React","PureComponent","connect","showToggle","hideToggle","setActiveProject","deleteProject","BugList","BugDetails","BugForm","ModalWindow","Toggle","ProjectHeader","Redirect","Route","ProjectPage","render","props","projects","project","setProject","match","url","routerProps","slice","filter","projectId","params","id","componentDidMount","componentDidUpdate","componentWillUnmount","resetActiveProject","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { setActiveProject, deleteProject } from \"../../actions/projectActions\";\n\nimport BugList from \"../../components/project/bugList\";\nimport BugDetails from \"../../components/project/bugDetails\";\nimport BugForm from \"../../components/forms/bugForm\";\nimport ModalWindow from \"../modalWindow\";\nimport Toggle from \"../toggle\";\nimport ProjectHeader from \"../../components/project/projectHeader\";\nimport { Redirect, Route } from \"react-router\";\n\nclass ProjectPage extends PureComponent {\n  render() {\n    if (this.props.projects) {\n      const project = this.setProject();\n\n      if (project) {\n        return (\n          <div id=\"project-page\">\n            <Toggle id={\"newBugFormToggle\"}>\n              <ModalWindow component={<BugForm project={project} />} />\n            </Toggle>\n\n            <div id=\"project-left-column\">\n              <ProjectHeader project={project} />\n              <div id=\"bugs-list-panel\">\n                <BugList route={this.props.match.url} project={project} />\n              </div>\n            </div>\n\n            <div className=\"test-border-blue\" id=\"project-right-column\">\n              <Route\n                exact\n                path={this.props.match.url}\n                render={() => <h3>Please select a Bug from the list</h3>}\n              />\n              <Route\n                path={`${this.props.match.url}/:bugId`}\n                render={(routerProps) => <BugDetails {...routerProps} />}\n              />\n            </div>\n          </div>\n        );\n      } else {\n        return <Redirect to={this.props.match.url.slice(0, -7)} />;\n      }\n    } else {\n      return <h3>Loading...</h3>;\n    }\n  }\n\n  setProject() {\n    if (this.props.projects) {\n      return this.props.projects.filter((project) => {\n        return project.projectId === this.props.match.params.id;\n      })[0];\n    } else {\n      return null;\n    }\n  }\n\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  componentDidMount() {\n    this.props.setActiveProject(this.setProject());\n  }\n  componentDidUpdate() {\n    this.props.setActiveProject(this.setProject());\n  }\n  componentWillUnmount() {\n    this.props.resetActiveProject;\n  }\n\n  // EVENTS\n  // handleOnClickDelete = (event) => {\n  //   // console.log(\"delete button clicked\");\n  //   if (window.confirm(\"Are you sure you want to yeet this project?\")) {\n  //     if (\n  //       window.confirm(\n  //         \"Are you really sure?? Theres no turning back after deleting...\"\n  //       )\n  //     ) {\n  //       this.props.deleteProject(this.props.activeProject);\n  //     }\n  //   }\n  // };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n    setActiveProject: (project) => dispatch(setActiveProject(project)),\n    deleteProject: (project) => dispatch(deleteProject(project)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectPage);\n"]},"metadata":{},"sourceType":"module"}