{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BugList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderBugs = () => {\n      // console.log(this.props.project);\n      if (this.props.bugs.allBugs) {\n        const bugs = this.props.bugs.allBugs.filter(bug => bug.project_id === this.props.project.id);\n        bugs.map((bug, id) => {\n          return /*#__PURE__*/_jsxDEV(BugLineItem, {\n            bug: bug,\n            url: this.props.route\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 16\n          }, this);\n        });\n        console.log(bugs);\n\n        if (bugs.length > 0) {\n          return bugs;\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No bugs to show! :)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading Bugs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"--This is the bug list component :)\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.renderBugs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bugs: state.bugs\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js"],"names":["React","Component","connect","BugLineItem","BugList","renderBugs","props","bugs","allBugs","filter","bug","project_id","project","id","map","route","console","log","length","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC9BI,UAD8B,GACjB,MAAM;AACjB;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AAC3B,cAAMD,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,MAAxB,CACVC,GAAD,IAASA,GAAG,CAACC,UAAJ,KAAmB,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,EADpC,CAAb;AAIAN,QAAAA,IAAI,CAACO,GAAL,CAAS,CAACJ,GAAD,EAAMG,EAAN,KAAa;AACpB,8BAAO,QAAC,WAAD;AAAsB,YAAA,GAAG,EAAEH,GAA3B;AAAgC,YAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWS;AAAhD,aAAkBF,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AACA,YAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACnB,iBAAOX,IAAP;AACD,SAFD,MAEO;AACL,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAdD,MAcO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KApB6B;AAAA;;AAsB9BY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,qEAGE;AAAA,kBAAK,KAAKd,UAAL;AAAL;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA9B6B;;AAiChC,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\n\nclass BugList extends Component {\n  renderBugs = () => {\n    // console.log(this.props.project);\n    if (this.props.bugs.allBugs) {\n      const bugs = this.props.bugs.allBugs.filter(\n        (bug) => bug.project_id === this.props.project.id\n      );\n\n      bugs.map((bug, id) => {\n        return <BugLineItem key={id} bug={bug} url={this.props.route} />;\n      });\n      console.log(bugs);\n      if (bugs.length > 0) {\n        return bugs;\n      } else {\n        return <h3>No bugs to show! :)</h3>;\n      }\n    } else {\n      return <h3>Loading Bugs...</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        --This is the bug list component :)\n        {/* TODO: fill in bug list content */}\n        <ul>{this.renderBugs()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bugs: state.bugs,\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);\n"]},"metadata":{},"sourceType":"module"}