{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BugList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderBugs = () => {\n      // console.log(this.props.project);\n      if (this.props.bugs.allBugs) {\n        // const bugs = this.props.bugs.allBugs.map((bug, id) => {\n        //   if (bug.project_id === this.props.project.id) {\n        //     return <BugLineItem key={id} bug={bug} url={this.props.route} />;\n        //   }\n        // }\n        if (bugs.length > 0) {\n          return bugs;\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No bugs to show! :)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 16\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading Bugs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"--This is the bug list component :)\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.renderBugs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bugs: state.bugs\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js"],"names":["React","Component","connect","BugLineItem","BugList","renderBugs","props","bugs","allBugs","length","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC9BI,UAD8B,GACjB,MAAM;AACjB;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AAEA,YAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,iBAAOF,IAAP;AACD,SAFD,MAEO;AACL,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAZD,MAYO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAlB6B;AAAA;;AAoB9BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,qEAGE;AAAA,kBAAK,KAAKL,UAAL;AAAL;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA5B6B;;AA+BhC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACS,eAAD,CAAP,CAAyBP,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\n\nclass BugList extends Component {\n  renderBugs = () => {\n    // console.log(this.props.project);\n    if (this.props.bugs.allBugs) {\n      // const bugs = this.props.bugs.allBugs.map((bug, id) => {\n      //   if (bug.project_id === this.props.project.id) {\n      //     return <BugLineItem key={id} bug={bug} url={this.props.route} />;\n      //   }\n      // }\n\n      if (bugs.length > 0) {\n        return bugs;\n      } else {\n        return <h3>No bugs to show! :)</h3>;\n      }\n    } else {\n      return <h3>Loading Bugs...</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        --This is the bug list component :)\n        {/* TODO: fill in bug list content */}\n        <ul>{this.renderBugs()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bugs: state.bugs,\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);\n"]},"metadata":{},"sourceType":"module"}