{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js\";\nimport React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { connect } from \"react-redux\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\"; // import Button from \"react-bootstrap/Button\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectStatus extends Component {\n  render() {\n    if (this.props.project && this.props.bugs) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: true,\n            variant: \"warning\",\n            now: this.calcProgressChartData()[0]\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: true,\n            variant: \"danger\",\n            now: this.calcProgressChartData()[1]\n          }, 2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: true,\n            variant: \"success\",\n            now: this.calcProgressChartData()[2]\n          }, 3, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(this.props.project, this.props.bugs);\n      console.log(data);\n      return data;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    project: state.projects.activeProject,\n    bugs: state.bugs.allBugs\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectStatus);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js"],"names":["React","Component","ProgressBar","connect","generateProjectStatusBarData","ProjectStatus","render","props","project","bugs","calcProgressChartData","data","console","log","mapStateToProps","state","projects","activeProject","allBugs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,4BAAT,QAA6C,8BAA7C,C,CACA;;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,0BACE;AAAA,+BAEE,QAAC,WAAD;AAAA,kCACE,QAAC,WAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,OAAO,EAAC,SAFV;AAGE,YAAA,GAAG,EAAE,KAAKC,qBAAL,GAA6B,CAA7B;AAHP,aAIO,CAJP;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,WAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,OAAO,EAAC,QAFV;AAGE,YAAA,GAAG,EAAE,KAAKA,qBAAL,GAA6B,CAA7B;AAHP,aAIO,CAJP;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE,QAAC,WAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,OAAO,EAAC,SAFV;AAGE,YAAA,GAAG,EAAE,KAAKA,qBAAL,GAA6B,CAA7B;AAHP,aAIO,CAJP;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BD,MA0BO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAEDA,EAAAA,qBAAqB,GAAG;AACtB,QAAI,KAAKH,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,YAAME,IAAI,GAAGP,4BAA4B,CACvC,KAAKG,KAAL,CAAWC,OAD4B,EAEvC,KAAKD,KAAL,CAAWE,IAF4B,CAAzC;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAOA,IAAP;AACD;AACF;;AA1CmC;;AA6CtC,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeC,aADnB;AAELR,IAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWS;AAFZ,GAAP;AAID,CALD;;AAOA,eAAef,OAAO,CAACW,eAAD,CAAP,CAAyBT,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { connect } from \"react-redux\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\";\n// import Button from \"react-bootstrap/Button\";\n\nclass ProjectStatus extends Component {\n  render() {\n    if (this.props.project && this.props.bugs) {\n      return (\n        <div>\n          {/* TODO: Fill in project status content */}\n          <ProgressBar>\n            <ProgressBar\n              animated\n              variant=\"warning\"\n              now={this.calcProgressChartData()[0]}\n              key={1}\n            />\n            <ProgressBar\n              animated\n              variant=\"danger\"\n              now={this.calcProgressChartData()[1]}\n              key={2}\n            />\n            <ProgressBar\n              animated\n              variant=\"success\"\n              now={this.calcProgressChartData()[2]}\n              key={3}\n            />\n          </ProgressBar>\n        </div>\n      );\n    } else {\n      return <p>Loading Chart</p>;\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(\n        this.props.project,\n        this.props.bugs\n      );\n      console.log(data);\n      return data;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    project: state.projects.activeProject,\n    bugs: state.bugs.allBugs,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectStatus);\n"]},"metadata":{},"sourceType":"module"}