{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectsPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProjectListDetailed from \"../../components/dashboard/projectListDetailed\";\nimport BugList from \"../../components/project/bugList\";\nimport { setActiveProject } from \"../../actions/projectActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectsPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectListDetailed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } // setProject() {\n  //   console.log(this.props.match);\n  //   if (this.props.projects) {\n  //     return this.props.projects.filter((project) => {\n  //       return project.projectId === this.props.match.params.projectId;\n  //     })[0];\n  //   } else {\n  //     return null;\n  //   }\n  // }\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  // componentDidMount() {\n  //   this.setProject();\n  //   // TODO: error here on loading data, needs to trigger after data loaded\n  //   this.props.setActiveProject(this.setProject());\n  // }\n  // componentDidUpdate() {\n  //   this.setProject();\n  //   // TODO: error here on loading data, needs to trigger after data loaded\n  //   this.props.setActiveProject(this.setProject());\n  // }\n\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveProject: project => dispatch(setActiveProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectsPage);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectsPage.js"],"names":["React","Component","connect","ProjectListDetailed","BugList","setActiveProject","ProjectsPage","render","mapDispatchToProps","dispatch","project"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GARkC,CAUnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/BmC;;AAkCrC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,gBAAgB,EAAGK,OAAD,IAAaD,QAAQ,CAACJ,gBAAgB,CAACK,OAAD,CAAjB;AADlC,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAAC,IAAD,EAAOM,kBAAP,CAAP,CAAkCF,YAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProjectListDetailed from \"../../components/dashboard/projectListDetailed\";\nimport BugList from \"../../components/project/bugList\";\n\nimport { setActiveProject } from \"../../actions/projectActions\";\n\nclass ProjectsPage extends Component {\n  render() {\n    return (\n      <div>\n        <ProjectListDetailed />\n        {/* <BugList /> */}\n      </div>\n    );\n  }\n\n  // setProject() {\n  //   console.log(this.props.match);\n  //   if (this.props.projects) {\n  //     return this.props.projects.filter((project) => {\n  //       return project.projectId === this.props.match.params.projectId;\n  //     })[0];\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  // componentDidMount() {\n  //   this.setProject();\n  //   // TODO: error here on loading data, needs to trigger after data loaded\n  //   this.props.setActiveProject(this.setProject());\n  // }\n  // componentDidUpdate() {\n  //   this.setProject();\n  //   // TODO: error here on loading data, needs to trigger after data loaded\n  //   this.props.setActiveProject(this.setProject());\n  // }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveProject: (project) => dispatch(setActiveProject(project)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectsPage);\n"]},"metadata":{},"sourceType":"module"}