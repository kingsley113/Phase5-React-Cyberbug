{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/pageHeader/activeProjectSelector.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setActiveProject } from \"../../actions/projectActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActiveProjectSelector extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnChange = event => {\n      // console.log(\"This would switch to project: \", event.target.value);\n      this.props.setActiveProject(event.target.value);\n    };\n  }\n\n  // setSelectedAttribute = (project) => {\n  // \tproject.projectId === action.projectId\n  // \t\t\t? \"selected\"\n  // \t\t\t: null;\n  // }\n  renderProjectOptions() {\n    if (this.props.projects.length > 0) {\n      return this.props.projects.map(project => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.id,\n          children: [project.projectId, \" - \", project.projectTitle]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"active-project\",\n          id: \"active-project-dropdown\",\n          onChange: this.handleOnChange,\n          value: () => this.props.activeProject ? this.props.activeProject.id : null,\n          children: [console.log(this.props.activeProject), this.renderProjectOptions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.projects.projects);\n  let activeProject = null;\n\n  if (state.projects.projects.length > 0) {\n    console.log(\"were in the if statement\");\n    activeProject = state.projects.projects.filter(project => project.activeProject === true);\n  }\n\n  return {\n    activeProject: activeProject\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveProject: id => dispatch(setActiveProject(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveProjectSelector);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/pageHeader/activeProjectSelector.js"],"names":["React","Component","connect","setActiveProject","ActiveProjectSelector","handleOnChange","event","props","target","value","renderProjectOptions","projects","length","map","project","id","projectId","projectTitle","render","activeProject","console","log","mapStateToProps","state","filter","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,MAAMC,qBAAN,SAAoCH,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC5CI,cAD4C,GAC1BC,KAAD,IAAW;AAC1B;AACA,WAAKC,KAAL,CAAWJ,gBAAX,CAA4BG,KAAK,CAACE,MAAN,CAAaC,KAAzC;AACD,KAJ2C;AAAA;;AAM5C;AACA;AACA;AACA;AACA;AACAC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAClC,aAAO,KAAKL,KAAL,CAAWI,QAAX,CAAoBE,GAApB,CAAyBC,OAAD,IAAa;AAC1C,4BACE;AAAQ,UAAA,KAAK,EAAEA,OAAO,CAACC,EAAvB;AAAA,qBAEGD,OAAO,CAACE,SAFX,SAEyBF,OAAO,CAACG,YAFjC;AAAA,WAAgCH,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPM,CAAP;AAQD,KATD,MASO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BAEE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,EAAE,EAAC,yBAFL;AAGE,UAAA,QAAQ,EAAE,KAAKb,cAHjB;AAIE,UAAA,KAAK,EAAE,MACL,KAAKE,KAAL,CAAWY,aAAX,GAA2B,KAAKZ,KAAL,CAAWY,aAAX,CAAyBJ,EAApD,GAAyD,IAL7D;AAAA,qBAQGK,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWY,aAAvB,CARH,EASG,KAAKT,oBAAL,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAjD2C;;AAmD9C,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACZ,QAAN,CAAeA,QAA3B;AACA,MAAIQ,aAAa,GAAG,IAApB;;AACA,MAAII,KAAK,CAACZ,QAAN,CAAeA,QAAf,CAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAF,IAAAA,aAAa,GAAGI,KAAK,CAACZ,QAAN,CAAeA,QAAf,CAAwBa,MAAxB,CACbV,OAAD,IAAaA,OAAO,CAACK,aAAR,KAA0B,IADzB,CAAhB;AAGD;;AACD,SAAO;AAAEA,IAAAA,aAAa,EAAEA;AAAjB,GAAP;AACD,CAVD;;AAYA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLvB,IAAAA,gBAAgB,EAAGY,EAAD,IAAQW,QAAQ,CAACvB,gBAAgB,CAACY,EAAD,CAAjB;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CACpBoB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbrB,qBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setActiveProject } from \"../../actions/projectActions\";\n\nclass ActiveProjectSelector extends Component {\n  handleOnChange = (event) => {\n    // console.log(\"This would switch to project: \", event.target.value);\n    this.props.setActiveProject(event.target.value);\n  };\n\n  // setSelectedAttribute = (project) => {\n  // \tproject.projectId === action.projectId\n  // \t\t\t? \"selected\"\n  // \t\t\t: null;\n  // }\n  renderProjectOptions() {\n    if (this.props.projects.length > 0) {\n      return this.props.projects.map((project) => {\n        return (\n          <option value={project.id} key={project.id}>\n            {/* TODO: Add 'selected' to option line if activeproject === true */}\n            {project.projectId} - {project.projectTitle}\n          </option>\n        );\n      });\n    } else {\n      return <option>Loading</option>;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* TODO: fill in selector content */}\n        <form>\n          <select\n            name=\"active-project\"\n            id=\"active-project-dropdown\"\n            onChange={this.handleOnChange}\n            value={() =>\n              this.props.activeProject ? this.props.activeProject.id : null\n            }\n          >\n            {console.log(this.props.activeProject)}\n            {this.renderProjectOptions()}\n            {/* <option value=\"dummy-project-1\">Dummy Project 1</option>\n            <option value=\"dummy-project-2\">Dummy Project 2</option>\n            <option value=\"dummy-project-3\">Dummy Project 3</option>\n            <option value=\"dummy-project-4\">Dummy Project 4</option> */}\n          </select>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(state.projects.projects);\n  let activeProject = null;\n  if (state.projects.projects.length > 0) {\n    console.log(\"were in the if statement\");\n    activeProject = state.projects.projects.filter(\n      (project) => project.activeProject === true\n    );\n  }\n  return { activeProject: activeProject };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveProject: (id) => dispatch(setActiveProject(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActiveProjectSelector);\n"]},"metadata":{},"sourceType":"module"}