{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/bugForm.js\";\nimport React, { Component } from \"react\";\nimport { createBug, editBug } from \"../../actions/bugActions\";\nimport { connect } from \"react-redux\";\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BugForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bugId: RandomIdGenerator.createBase36(6),\n      bugTitle: \"\",\n      bugDescription: \"\",\n      bugTags: \"\",\n      bugDetails: \"\",\n      bugLineNo: \"\",\n      bugPriority: \"Low\",\n      bugDueDate: \"\",\n      bugStatus: \"Not Started\",\n      project_id: this.props.project.id\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n\n      if (this.props.cleanForm) {\n        // Reset the clean form status after submitting\n        this.props.renderCleanForm(false);\n        this.props.createBug({\n          bug: this.state\n        });\n      } else {\n        this.props.editBug({\n          bug: this.state\n        });\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.props.hideToggle(\"newBugFormToggle\");\n    };\n  }\n\n  // FORM\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Create a new bug for project \", this.props.project.projectId, \" -\", \" \", this.props.project.projectTitle, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugId\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Bug ID:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            name: \"bugId\",\n            className: \"col-sm-1\",\n            children: this.state.bugId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugTitle\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Title:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bugTitle\",\n            className: \"col-lg-3\",\n            value: this.state.bugTitle,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugDescription\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Description:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"bugDescription\",\n            value: this.state.bugDescription,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugTags\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Tags:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactTagInput, {\n            tags: this.state.bugTags.split(\",\"),\n            onChange: newTags => this.setState({\n              bugTags: newTags.join()\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugDetails\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Details:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"bugDetails\",\n            value: this.state.bugDetails,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugLineNo\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"File/Line No:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bugLineNo\",\n            className: \"col-lg-4\",\n            value: this.state.bugLineNo,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugPriority\",\n            className: \"col-sm-1 right-align-text\",\n            children: [\"Priority:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"bugPriority\",\n            value: this.state.bugPriority,\n            onChange: this.handleOnChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Critical\",\n              children: \"Critical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Roadblock\",\n              children: \"Roadblock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bugDueDate\",\n            children: \"Due Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"bugDueDate\",\n            value: this.state.bugDueDate,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bugStatus\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"bugStatus\",\n              value: this.state.bugStatus,\n              onChange: this.handleOnChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Not Started\",\n                children: \"Not Started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Complete\",\n                children: \"Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Save Bug (Ew!)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleOnClick,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } // LOAD FORM DATA IF EXISTING BUG\n\n\n  componentDidMount() {\n    if (this.props.activeBug && !this.props.cleanForm) {\n      this.loadFormData();\n    }\n  }\n\n  loadFormData() {\n    const bug = this.props.activeBug;\n    this.setState({\n      id: bug.id\n    });\n\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: bug[prop] ? bug[prop] : \"\"\n      });\n    }\n  } // EVENTS\n\n\n} // REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    activeBug: state.bugs.activeBug,\n    cleanForm: state.forms.renderCleanForm\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createBug: bugObject => dispatch(createBug(bugObject)),\n    editBug: bugObject => dispatch(editBug(bugObject)),\n    renderCleanForm: bool => dispatch(renderCleanForm(bool)),\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BugForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/bugForm.js"],"names":["React","Component","createBug","editBug","connect","RandomIdGenerator","showToggle","hideToggle","renderCleanForm","ReactTagInput","BugForm","state","bugId","createBase36","bugTitle","bugDescription","bugTags","bugDetails","bugLineNo","bugPriority","bugDueDate","bugStatus","project_id","props","project","id","handleOnSubmit","event","preventDefault","cleanForm","bug","handleOnChange","setState","target","name","value","handleOnClick","render","projectId","projectTitle","split","newTags","join","componentDidMount","activeBug","loadFormData","prop","mapStateToProps","bugs","forms","mapDispatchToProps","dispatch","bugObject","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { createBug, editBug } from \"../../actions/bugActions\";\nimport { connect } from \"react-redux\";\n\nimport RandomIdGenerator from \"../../helpers/randomIdGenerator\";\n\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { renderCleanForm } from \"../../actions/formActions\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nclass BugForm extends Component {\n  state = {\n    bugId: RandomIdGenerator.createBase36(6),\n    bugTitle: \"\",\n    bugDescription: \"\",\n    bugTags: \"\",\n    bugDetails: \"\",\n    bugLineNo: \"\",\n    bugPriority: \"Low\",\n    bugDueDate: \"\",\n    bugStatus: \"Not Started\",\n    project_id: this.props.project.id,\n  };\n\n  // FORM\n  render() {\n    return (\n      <div>\n        <h2>\n          Create a new bug for project {this.props.project.projectId} -{\" \"}\n          {this.props.project.projectTitle}:\n        </h2>\n        <form onSubmit={this.handleOnSubmit}>\n          <div className=\"row\">\n            <label htmlFor=\"bugId\" className=\"col-sm-1 right-align-text\">\n              Bug ID:{\" \"}\n            </label>\n            <span name=\"bugId\" className=\"col-sm-1\">\n              {this.state.bugId}\n            </span>\n            <label htmlFor=\"bugTitle\" className=\"col-sm-1 right-align-text\">\n              Title:{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              name=\"bugTitle\"\n              className=\"col-lg-3\"\n              value={this.state.bugTitle}\n              onChange={this.handleOnChange}\n            />\n          </div>\n          <div className=\"row\">\n            <label\n              htmlFor=\"bugDescription\"\n              className=\"col-sm-1 right-align-text\"\n            >\n              Description:{\" \"}\n            </label>\n            <textarea\n              name=\"bugDescription\"\n              value={this.state.bugDescription}\n              onChange={this.handleOnChange}\n            ></textarea>\n          </div>\n          <div className=\"row\">\n            <label htmlFor=\"bugTags\" className=\"col-sm-1 right-align-text\">\n              Tags:{\" \"}\n            </label>\n            {/* *************TAGS*************** */}\n            <ReactTagInput\n              tags={this.state.bugTags.split(\",\")}\n              onChange={(newTags) => this.setState({ bugTags: newTags.join() })}\n            />\n            {/* <textarea\n              name=\"bugTags\"\n              value={this.state.bugTags}\n              onChange={this.handleOnChange}\n            ></textarea> */}\n          </div>\n          <div className=\"row\">\n            <label htmlFor=\"bugDetails\" className=\"col-sm-1 right-align-text\">\n              Details:{\" \"}\n            </label>\n            <textarea\n              name=\"bugDetails\"\n              value={this.state.bugDetails}\n              onChange={this.handleOnChange}\n            ></textarea>\n          </div>\n          <div className=\"row\">\n            <label htmlFor=\"bugLineNo\" className=\"col-sm-1 right-align-text\">\n              File/Line No:{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              name=\"bugLineNo\"\n              className=\"col-lg-4\"\n              value={this.state.bugLineNo}\n              onChange={this.handleOnChange}\n            />\n          </div>\n          <div className=\"row\">\n            <label htmlFor=\"bugPriority\" className=\"col-sm-1 right-align-text\">\n              Priority:{\" \"}\n            </label>\n            <select\n              name=\"bugPriority\"\n              value={this.state.bugPriority}\n              onChange={this.handleOnChange}\n            >\n              <option value=\"Low\">Low</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"High\">High</option>\n              <option value=\"Critical\">Critical</option>\n              <option value=\"Roadblock\">Roadblock</option>\n            </select>\n            <label htmlFor=\"bugDueDate\">Due Date: </label>\n            <input\n              type=\"date\"\n              name=\"bugDueDate\"\n              value={this.state.bugDueDate}\n              onChange={this.handleOnChange}\n            />\n            <div>\n              <label htmlFor=\"bugStatus\">Status:</label>\n              <select\n                name=\"bugStatus\"\n                value={this.state.bugStatus}\n                onChange={this.handleOnChange}\n              >\n                <option value=\"Not Started\">Not Started</option>\n                <option value=\"In Progress\">In Progress</option>\n                <option value=\"Complete\">Complete</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <input type=\"submit\" value=\"Save Bug (Ew!)\" />\n            <button onClick={this.handleOnClick}>Cancel</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  // LOAD FORM DATA IF EXISTING BUG\n  componentDidMount() {\n    if (this.props.activeBug && !this.props.cleanForm) {\n      this.loadFormData();\n    }\n  }\n\n  loadFormData() {\n    const bug = this.props.activeBug;\n\n    this.setState({ id: bug.id });\n    for (const prop in this.state) {\n      this.setState({\n        [prop]: bug[prop] ? bug[prop] : \"\",\n      });\n    }\n  }\n\n  // EVENTS\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (this.props.cleanForm) {\n      // Reset the clean form status after submitting\n      this.props.renderCleanForm(false);\n      this.props.createBug({ bug: this.state });\n    } else {\n      this.props.editBug({ bug: this.state });\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnClick = (event) => {\n    this.props.hideToggle(\"newBugFormToggle\");\n  };\n}\n\n// REDUX\nconst mapStateToProps = (state) => {\n  return {\n    activeBug: state.bugs.activeBug,\n    cleanForm: state.forms.renderCleanForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createBug: (bugObject) => dispatch(createBug(bugObject)),\n    editBug: (bugObject) => dispatch(editBug(bugObject)),\n    renderCleanForm: (bool) => dispatch(renderCleanForm(bool)),\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BugForm);\n"]},"metadata":{},"sourceType":"module"}