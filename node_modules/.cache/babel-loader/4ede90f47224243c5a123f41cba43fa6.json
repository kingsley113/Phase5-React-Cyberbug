{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectPage.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport { setActiveProject, deleteProject, resetActiveProject } from \"../../actions/projectActions\";\nimport BugList from \"../../components/project/bugList\";\nimport BugDetails from \"../../components/project/bugDetails\";\nimport BugForm from \"../../components/forms/bugForm\";\nimport ModalWindow from \"../modalWindow\";\nimport Toggle from \"../toggle\";\nimport ProjectHeader from \"../../components/project/projectHeader\";\nimport { Redirect, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectPage extends PureComponent {\n  render() {\n    if (this.props.projects) {\n      const project = this.setProject();\n\n      if (project) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"project-page\",\n          children: [/*#__PURE__*/_jsxDEV(Toggle, {\n            id: \"newBugFormToggle\",\n            children: /*#__PURE__*/_jsxDEV(ModalWindow, {\n              component: /*#__PURE__*/_jsxDEV(BugForm, {\n                project: project\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"project-left-column\",\n            children: [/*#__PURE__*/_jsxDEV(ProjectHeader, {\n              project: project,\n              activeProject: this.props.activeProject,\n              bugs: this.props.bugs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"bugs-list-panel\",\n              children: /*#__PURE__*/_jsxDEV(BugList, {\n                route: this.props.match.url,\n                project: project,\n                bugs: this.props.bugs,\n                activeBug: this.props.activeBug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"project-right-column\",\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: this.props.match.url,\n              render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"select-bug-placeholder\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Please select a Bug from the list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: `${this.props.match.url}/:bugId`,\n              render: routerProps => /*#__PURE__*/_jsxDEV(BugDetails, { ...routerProps,\n                bugs: this.props.bugs,\n                activeBug: this.props.activeBug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.props.match.url.slice(0, -7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  setProject() {\n    if (this.props.projects) {\n      return this.props.projects.filter(project => {\n        return project.projectId === this.props.match.params.id;\n      })[0];\n    } else {\n      return null;\n    }\n  } // SET ACTIVE BUG ON LOAD AND UPDATE\n\n\n  componentDidMount() {\n    this.props.setActiveProject(this.setProject());\n  }\n\n  componentDidUpdate() {\n    this.props.setActiveProject(this.setProject());\n  }\n\n  componentWillUnmount() {\n    this.props.resetActiveProject();\n  } // EVENTS\n  // handleOnClickDelete = (event) => {\n  //   // console.log(\"delete button clicked\");\n  //   if (window.confirm(\"Are you sure you want to yeet this project?\")) {\n  //     if (\n  //       window.confirm(\n  //         \"Are you really sure?? Theres no turning back after deleting...\"\n  //       )\n  //     ) {\n  //       this.props.deleteProject(this.props.activeProject);\n  //     }\n  //   }\n  // };\n\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showToggle: id => dispatch(showToggle(id)),\n    hideToggle: id => dispatch(hideToggle(id)),\n    setActiveProject: project => dispatch(setActiveProject(project)),\n    resetActiveProject: project => dispatch(resetActiveProject()),\n    deleteProject: project => dispatch(deleteProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectPage);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pages/projectPage.js"],"names":["React","PureComponent","connect","showToggle","hideToggle","setActiveProject","deleteProject","resetActiveProject","BugList","BugDetails","BugForm","ModalWindow","Toggle","ProjectHeader","Redirect","Route","ProjectPage","render","props","projects","project","setProject","activeProject","bugs","match","url","activeBug","routerProps","slice","filter","projectId","params","id","componentDidMount","componentDidUpdate","componentWillUnmount","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { showToggle, hideToggle } from \"../../actions/toggleActions\";\nimport {\n  setActiveProject,\n  deleteProject,\n  resetActiveProject,\n} from \"../../actions/projectActions\";\n\nimport BugList from \"../../components/project/bugList\";\nimport BugDetails from \"../../components/project/bugDetails\";\nimport BugForm from \"../../components/forms/bugForm\";\nimport ModalWindow from \"../modalWindow\";\nimport Toggle from \"../toggle\";\nimport ProjectHeader from \"../../components/project/projectHeader\";\nimport { Redirect, Route } from \"react-router\";\n\nclass ProjectPage extends PureComponent {\n  render() {\n    if (this.props.projects) {\n      const project = this.setProject();\n\n      if (project) {\n        return (\n          <div id=\"project-page\">\n            <Toggle id={\"newBugFormToggle\"}>\n              <ModalWindow component={<BugForm project={project} />} />\n            </Toggle>\n\n            <div id=\"project-left-column\">\n              <ProjectHeader\n                project={project}\n                activeProject={this.props.activeProject}\n                bugs={this.props.bugs}\n              />\n              <div id=\"bugs-list-panel\">\n                <BugList\n                  route={this.props.match.url}\n                  project={project}\n                  bugs={this.props.bugs}\n                  activeBug={this.props.activeBug}\n                />\n              </div>\n            </div>\n\n            <div id=\"project-right-column\">\n              <Route\n                exact\n                path={this.props.match.url}\n                render={() => (\n                  <div id=\"select-bug-placeholder\">\n                    <h3>Please select a Bug from the list</h3>\n                  </div>\n                )}\n              />\n              <Route\n                path={`${this.props.match.url}/:bugId`}\n                render={(routerProps) => (\n                  <BugDetails\n                    {...routerProps}\n                    bugs={this.props.bugs}\n                    activeBug={this.props.activeBug}\n                  />\n                )}\n              />\n            </div>\n          </div>\n        );\n      } else {\n        return <Redirect to={this.props.match.url.slice(0, -7)} />;\n      }\n    } else {\n      return <h3>Loading...</h3>;\n    }\n  }\n\n  setProject() {\n    if (this.props.projects) {\n      return this.props.projects.filter((project) => {\n        return project.projectId === this.props.match.params.id;\n      })[0];\n    } else {\n      return null;\n    }\n  }\n\n  // SET ACTIVE BUG ON LOAD AND UPDATE\n  componentDidMount() {\n    this.props.setActiveProject(this.setProject());\n  }\n  componentDidUpdate() {\n    this.props.setActiveProject(this.setProject());\n  }\n  componentWillUnmount() {\n    this.props.resetActiveProject();\n  }\n\n  // EVENTS\n  // handleOnClickDelete = (event) => {\n  //   // console.log(\"delete button clicked\");\n  //   if (window.confirm(\"Are you sure you want to yeet this project?\")) {\n  //     if (\n  //       window.confirm(\n  //         \"Are you really sure?? Theres no turning back after deleting...\"\n  //       )\n  //     ) {\n  //       this.props.deleteProject(this.props.activeProject);\n  //     }\n  //   }\n  // };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showToggle: (id) => dispatch(showToggle(id)),\n    hideToggle: (id) => dispatch(hideToggle(id)),\n    setActiveProject: (project) => dispatch(setActiveProject(project)),\n    resetActiveProject: (project) => dispatch(resetActiveProject()),\n    deleteProject: (project) => dispatch(deleteProject(project)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProjectPage);\n"]},"metadata":{},"sourceType":"module"}