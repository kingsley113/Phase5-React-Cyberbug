{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugLineItem.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BugLineItem = props => {\n  const {\n    bugId,\n    bugTitle,\n    bugPriority,\n    bugDueDate,\n    bugStatus\n  } = props.bug;\n  const url = props.url;\n\n  const dueDate = () => bugDueDate ? new Date(bugDueDate).toLocaleDateString() : \"N/A\";\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: renderActiveHighlight(bugId, props.activeBug),\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-bug-id\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/${bugId}`,\n        children: bugId\n      }, bugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: bugTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: bugPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: dueDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"bug-status\",\n      children: bugStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BugLineItem;\n\nconst renderActiveHighlight = (bugId, activeBug) => {\n  if (activeBug) {\n    return bugId === activeBug.bugId ? \"active-bug-row\" : null;\n  }\n};\n\nexport default BugLineItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BugLineItem\");","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugLineItem.js"],"names":["React","Link","BugLineItem","props","bugId","bugTitle","bugPriority","bugDueDate","bugStatus","bug","url","dueDate","Date","toLocaleDateString","renderActiveHighlight","activeBug"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,UAAhC;AAA4CC,IAAAA;AAA5C,MAA0DL,KAAK,CAACM,GAAtE;AACA,QAAMC,GAAG,GAAGP,KAAK,CAACO,GAAlB;;AACA,QAAMC,OAAO,GAAG,MACdJ,UAAU,GAAG,IAAIK,IAAJ,CAASL,UAAT,EAAqBM,kBAArB,EAAH,GAA+C,KAD3D;;AAGA,sBACE;AAAI,IAAA,SAAS,EAAEC,qBAAqB,CAACV,KAAD,EAAQD,KAAK,CAACY,SAAd,CAApC;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,6BACE,QAAC,IAAD;AAAkB,QAAA,EAAE,EAAG,GAAEL,GAAI,IAAGN,KAAM,EAAtC;AAAA,kBACGA;AADH,SAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAKK,OAAO;AAAZ;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;KAAMN,W;;AAqBN,MAAMY,qBAAqB,GAAG,CAACV,KAAD,EAAQW,SAAR,KAAsB;AAClD,MAAIA,SAAJ,EAAe;AACb,WAAOX,KAAK,KAAKW,SAAS,CAACX,KAApB,GAA4B,gBAA5B,GAA+C,IAAtD;AACD;AACF,CAJD;;AAMA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BugLineItem = (props) => {\n  const { bugId, bugTitle, bugPriority, bugDueDate, bugStatus } = props.bug;\n  const url = props.url;\n  const dueDate = () =>\n    bugDueDate ? new Date(bugDueDate).toLocaleDateString() : \"N/A\";\n\n  return (\n    <tr className={renderActiveHighlight(bugId, props.activeBug)}>\n      <td className=\"table-bug-id\">\n        <Link key={bugId} to={`${url}/${bugId}`}>\n          {bugId}\n        </Link>\n      </td>\n      <td>{bugTitle}</td>\n      <td>{bugPriority}</td>\n      <td>{dueDate()}</td>\n      <td className=\"bug-status\">{bugStatus}</td>\n    </tr>\n  );\n};\n\nconst renderActiveHighlight = (bugId, activeBug) => {\n  if (activeBug) {\n    return bugId === activeBug.bugId ? \"active-bug-row\" : null;\n  }\n};\n\nexport default BugLineItem;\n"]},"metadata":{},"sourceType":"module"}