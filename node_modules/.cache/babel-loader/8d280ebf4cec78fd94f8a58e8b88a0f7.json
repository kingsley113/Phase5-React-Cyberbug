{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loadProjects } from \"./actions/projectActions\";\nimport { loadBugs } from \"./actions/bugActions\";\nimport PageHeader from \"./components/pageHeader\";\nimport PageContent from \"./containers/pageContent\";\nimport PageSidebar from \"./components/pageSidebar\";\nimport SplashScreen from \"./components/splashScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      _jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: SplashScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(PageHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-main\",\n          children: [/*#__PURE__*/_jsxDEV(PageSidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PageContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this) // TODO: Add logic to determine if user is logged in or not and show splash screen if not\n\n    );\n  }\n\n  componentDidMount() {\n    this.props.loadProjects();\n    this.props.loadBugs();\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadProjects: () => dispatch(loadProjects()),\n    loadBugs: () => dispatch(loadBugs())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","connect","loadProjects","loadBugs","PageHeader","PageContent","PageSidebar","SplashScreen","App","render","componentDidMount","props","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA,cAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAeE;;AAfF;AAiBD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,YAAX;AACA,SAAKS,KAAL,CAAWR,QAAX;AACD;;AAxByB;;AA2B5B,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,YAAY,EAAE,MAAMW,QAAQ,CAACX,YAAY,EAAb,CADvB;AAELC,IAAAA,QAAQ,EAAE,MAAMU,QAAQ,CAACV,QAAQ,EAAT;AAFnB,GAAP;AAID,CALD;;AAOA,eAAeF,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCJ,GAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loadProjects } from \"./actions/projectActions\";\nimport { loadBugs } from \"./actions/bugActions\";\n\nimport PageHeader from \"./components/pageHeader\";\nimport PageContent from \"./containers/pageContent\";\nimport PageSidebar from \"./components/pageSidebar\";\nimport SplashScreen from \"./components/splashScreen\";\n\nclass App extends Component {\n  render() {\n    return (\n      // <div>\n      <Router>\n        <Route exact path=\"/login\" component={SplashScreen} />\n        <div>\n          <PageHeader />\n        </div>\n        <div className=\"page-main\">\n          {/* Sidebar */}\n          <PageSidebar />\n          {/* Content */}\n          <PageContent />\n        </div>\n        {/* </div> */}\n      </Router>\n      // TODO: Add logic to determine if user is logged in or not and show splash screen if not\n    );\n  }\n\n  componentDidMount() {\n    this.props.loadProjects();\n    this.props.loadBugs();\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadProjects: () => dispatch(loadProjects()),\n    loadBugs: () => dispatch(loadBugs()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}