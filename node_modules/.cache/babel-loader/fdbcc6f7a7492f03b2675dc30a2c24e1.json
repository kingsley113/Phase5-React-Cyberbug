{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/loginForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { userLogin } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n\n      if (this.validate()) {\n        this.props.userLogin({\n          user: {\n            username: username,\n            password: password\n          }\n        });\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.renderErrors = () => {\n      let errorElements = [];\n\n      if (this.state.errors !== {}) {\n        for (const property in this.state.errors) {\n          errorElements.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"error_text\",\n            children: this.state.errors[property]\n          }, property, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this));\n        }\n      }\n\n      return errorElements;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"login-form\",\n        onSubmit: this.handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          onChange: this.handleOnChange,\n          value: this.state.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          onChange: this.handleOnChange,\n          value: this.state.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.renderErrors()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"login-btn\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"create-account\",\n            id: \"create-account-btn\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  validate() {\n    let isValid = true;\n    let errors = {}; // Check username\n\n    if (this.state.username === \"\") {\n      isValid = false;\n      errors[\"username\"] = \"Please enter a username\";\n    } // Check password\n\n\n    if (this.state.password === \"\") {\n      isValid = false;\n      errors[\"password\"] = \"Please enter a password\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return isValid;\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userLogin: data => dispatch(userLogin(data))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/loginForm.js"],"names":["React","Component","connect","Link","userLogin","LoginForm","state","username","password","errors","handleOnSubmit","event","preventDefault","validate","props","user","handleOnChange","setState","target","name","value","renderErrors","errorElements","property","push","render","isValid","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { userLogin } from \"../../actions/authActions\";\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {},\n  };\n\n  render() {\n    return (\n      <div>\n        <form id=\"login-form\" onSubmit={this.handleOnSubmit}>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            onChange={this.handleOnChange}\n            value={this.state.username}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            onChange={this.handleOnChange}\n            value={this.state.password}\n          />\n          <div>{this.renderErrors()}</div>\n          <input type=\"submit\" id=\"login-btn\" value=\"Log In\" />\n          <Link to=\"/signup\">\n            <button id=\"create-account\" id=\"create-account-btn\">\n              Create Account\n            </button>\n          </Link>\n        </form>\n      </div>\n    );\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    if (this.validate()) {\n      this.props.userLogin({\n        user: { username: username, password: password },\n      });\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  validate() {\n    let isValid = true;\n    let errors = {};\n\n    // Check username\n    if (this.state.username === \"\") {\n      isValid = false;\n      errors[\"username\"] = \"Please enter a username\";\n    }\n    // Check password\n    if (this.state.password === \"\") {\n      isValid = false;\n      errors[\"password\"] = \"Please enter a password\";\n    }\n\n    this.setState({ errors: errors });\n    return isValid;\n  }\n\n  renderErrors = () => {\n    let errorElements = [];\n    if (this.state.errors !== {}) {\n      for (const property in this.state.errors) {\n        errorElements.push(\n          <h3 className=\"error_text\" key={property}>\n            {this.state.errors[property]}\n          </h3>\n        );\n      }\n    }\n\n    return errorElements;\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userLogin: (data) => dispatch(userLogin(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}