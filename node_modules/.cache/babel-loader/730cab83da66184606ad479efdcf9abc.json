{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BugList extends Component {\n  constructor(props) {\n    super();\n\n    this.renderBugs = () => {\n      if (this.bugs.allBugs) {\n        const bugs = this.bugs.allBugs.filter(bug => bug.project_id === this.project.id);\n        const bugList = bugs.map((bug, id) => {\n          return /*#__PURE__*/_jsxDEV(BugLineItem, {\n            bug: bug,\n            url: this.route\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }, this);\n        });\n\n        if (bugList.length > 0) {\n          return bugList;\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No bugs! :)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 16\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading Bugs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.project = props.project;\n    this.bugs = props.bugs;\n    this.route = props.route;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"--This is the bug list component :)\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.renderBugs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bugs: state.bugs\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/bugList.js"],"names":["React","Component","connect","BugLineItem","BugList","constructor","props","renderBugs","bugs","allBugs","filter","bug","project_id","project","id","bugList","map","route","length","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAOnBC,UAPmB,GAON,MAAM;AACjB,UAAI,KAAKC,IAAL,CAAUC,OAAd,EAAuB;AACrB,cAAMD,IAAI,GAAG,KAAKA,IAAL,CAAUC,OAAV,CAAkBC,MAAlB,CACVC,GAAD,IAASA,GAAG,CAACC,UAAJ,KAAmB,KAAKC,OAAL,CAAaC,EAD9B,CAAb;AAIA,cAAMC,OAAO,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAACL,GAAD,EAAMG,EAAN,KAAa;AACpC,8BAAO,QAAC,WAAD;AAAsB,YAAA,GAAG,EAAEH,GAA3B;AAAgC,YAAA,GAAG,EAAE,KAAKM;AAA1C,aAAkBH,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFe,CAAhB;;AAGA,YAAIC,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtB,iBAAOH,OAAP;AACD,SAFD,MAEO;AACL,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAbD,MAaO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAxBkB;;AAEjB,SAAKF,OAAL,GAAeP,KAAK,CAACO,OAArB;AACA,SAAKL,IAAL,GAAYF,KAAK,CAACE,IAAlB;AACA,SAAKS,KAAL,GAAaX,KAAK,CAACW,KAAnB;AACD;;AAqBDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,sDAcE;AAAA,kBAAK,KAAKZ,UAAL;AAAL;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA9C6B;;AAiDhC,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,IAAI,EAAEa,KAAK,CAACb;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BugLineItem from \"./bugLineItem\";\n\nclass BugList extends Component {\n  constructor(props) {\n    super();\n    this.project = props.project;\n    this.bugs = props.bugs;\n    this.route = props.route;\n  }\n\n  renderBugs = () => {\n    if (this.bugs.allBugs) {\n      const bugs = this.bugs.allBugs.filter(\n        (bug) => bug.project_id === this.project.id\n      );\n\n      const bugList = bugs.map((bug, id) => {\n        return <BugLineItem key={id} bug={bug} url={this.route} />;\n      });\n      if (bugList.length > 0) {\n        return bugList;\n      } else {\n        return <h3>No bugs! :)</h3>;\n      }\n    } else {\n      return <h3>Loading Bugs...</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Id</th>\n              <th>Title</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n        --This is the bug list component :)\n        {/* TODO: fill in bug list content */}\n        <ul>{this.renderBugs()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bugs: state.bugs,\n  };\n};\n\nexport default connect(mapStateToProps)(BugList);\n"]},"metadata":{},"sourceType":"module"}