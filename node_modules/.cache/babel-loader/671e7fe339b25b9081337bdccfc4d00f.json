{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/projectsChart.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { generatePieChartData } from \"../../helpers/projectHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectsChart extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-border\",\n      id: \"project-summary-chart\",\n      children: [\"--This is the projects chart component :)\", this.renderPieChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderPieChart() {\n    const data = generatePieChartData(this.props.projects, this.props.bugs); // const elements = data.map((object, id) => {\n    // <h3>{object.key}{</h3>\n    // });\n\n    let elements = []; // for (const projId in data) {\n    //   elements.push(\n    //     <p>\n    //       Project Id: {projId}: No of bugs: {data[projId]}\n    //     </p>\n    //   );\n    // }\n    // console.log(\"Data: \", data);\n\n    if (data) {\n      return Object.keys(data).map((key, index) => {\n        // console.log(\"inside map\", key);\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Project Id: \", key, \": No of bugs: \", data[key]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      });\n    } // console.log(elements);\n    // return elements;\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects.allProjects,\n    bugs: state.bugs.allBugs\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectsChart); // Chart Elements to compare\n// # of open tasks per project,","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/projectsChart.js"],"names":["React","Component","connect","generatePieChartData","ProjectsChart","render","renderPieChart","data","props","projects","bugs","elements","Object","keys","map","key","index","mapStateToProps","state","allProjects","allBugs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,8BAArC;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,uBAAhC;AAAA,8DAGG,KAAKC,cAAL,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEDA,EAAAA,cAAc,GAAG;AACf,UAAMC,IAAI,GAAGJ,oBAAoB,CAAC,KAAKK,KAAL,CAAWC,QAAZ,EAAsB,KAAKD,KAAL,CAAWE,IAAjC,CAAjC,CADe,CAEf;AACA;AACA;;AACA,QAAIC,QAAQ,GAAG,EAAf,CALe,CAMf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIJ,IAAJ,EAAU;AACR,aAAOK,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3C;AACA,4BACE;AAAA,qCACeD,GADf,oBACkCR,IAAI,CAACQ,GAAD,CADtC;AAAA,WAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAPM,CAAP;AAQD,KAvBc,CAwBf;AACA;;AACD;;AArCmC;;AAwCtC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAeU,WADpB;AAELT,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAN,CAAWU;AAFZ,GAAP;AAID,CALD;;AAOA,eAAelB,OAAO,CAACe,eAAD,CAAP,CAAyBb,aAAzB,CAAf,C,CAEA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { generatePieChartData } from \"../../helpers/projectHelpers\";\n\nclass ProjectsChart extends Component {\n  render() {\n    return (\n      <div className=\"test-border\" id=\"project-summary-chart\">\n        --This is the projects chart component :)\n        {/* TODO: fill in project chart content and API */}\n        {this.renderPieChart()}\n      </div>\n    );\n  }\n\n  renderPieChart() {\n    const data = generatePieChartData(this.props.projects, this.props.bugs);\n    // const elements = data.map((object, id) => {\n    // <h3>{object.key}{</h3>\n    // });\n    let elements = [];\n    // for (const projId in data) {\n    //   elements.push(\n    //     <p>\n    //       Project Id: {projId}: No of bugs: {data[projId]}\n    //     </p>\n    //   );\n    // }\n    // console.log(\"Data: \", data);\n    if (data) {\n      return Object.keys(data).map((key, index) => {\n        // console.log(\"inside map\", key);\n        return (\n          <p key={index}>\n            Project Id: {key}: No of bugs: {data[key]}\n          </p>\n        );\n      });\n    }\n    // console.log(elements);\n    // return elements;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects.allProjects,\n    bugs: state.bugs.allBugs,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectsChart);\n\n// Chart Elements to compare\n// # of open tasks per project,\n"]},"metadata":{},"sourceType":"module"}