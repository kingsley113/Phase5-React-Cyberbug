{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/projectsChart.js\";\nimport React, { Component } from \"react\"; // import { connect } from \"react-redux\";\n\nimport { generatePieChartData } from \"../../helpers/projectHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectsChart extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-border\",\n      id: \"project-summary-chart\",\n      children: [\"Placeholder data until the pie chart is set up:\", this.renderPieChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderPieChart() {\n    const data = generatePieChartData(this.props.projects, this.props.bugs);\n\n    if (data) {\n      return Object.keys(data).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Project Id: \", key, \": No of bugs: \", data[key]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  }\n\n} // const mapStateToProps = (state) => {\n//   return {\n//     projects: state.projects.allProjects,\n//     bugs: state.bugs.allBugs,\n//   };\n// };\n// export default connect(mapStateToProps)(ProjectsChart);\n\n\nexport default ProjectsChart;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/projectsChart.js"],"names":["React","Component","generatePieChartData","ProjectsChart","render","renderPieChart","data","props","projects","bugs","Object","keys","map","key","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,oBAAT,QAAqC,8BAArC;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,uBAAhC;AAAA,oEAGG,KAAKC,cAAL,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEDA,EAAAA,cAAc,GAAG;AACf,UAAMC,IAAI,GAAGJ,oBAAoB,CAAC,KAAKK,KAAL,CAAWC,QAAZ,EAAsB,KAAKD,KAAL,CAAWE,IAAjC,CAAjC;;AACA,QAAIH,IAAJ,EAAU;AACR,aAAOI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3C,4BACE;AAAA,qCACeD,GADf,oBACkCP,IAAI,CAACO,GAAD,CADtC;AAAA,WAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANM,CAAP;AAOD;AACF;;AAtBmC,C,CAyBtC;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeX,aAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\nimport { generatePieChartData } from \"../../helpers/projectHelpers\";\n\nclass ProjectsChart extends Component {\n  render() {\n    return (\n      <div className=\"test-border\" id=\"project-summary-chart\">\n        {/* TODO: fill in project chart content and API */}\n        Placeholder data until the pie chart is set up:\n        {this.renderPieChart()}\n      </div>\n    );\n  }\n\n  renderPieChart() {\n    const data = generatePieChartData(this.props.projects, this.props.bugs);\n    if (data) {\n      return Object.keys(data).map((key, index) => {\n        return (\n          <p key={index}>\n            Project Id: {key}: No of bugs: {data[key]}\n          </p>\n        );\n      });\n    }\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     projects: state.projects.allProjects,\n//     bugs: state.bugs.allBugs,\n//   };\n// };\n\n// export default connect(mapStateToProps)(ProjectsChart);\nexport default ProjectsChart;\n"]},"metadata":{},"sourceType":"module"}