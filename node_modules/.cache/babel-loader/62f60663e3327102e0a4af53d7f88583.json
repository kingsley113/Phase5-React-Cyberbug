{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newUserForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewUserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      password_confirmation: \"\",\n      errors: {}\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        first_name,\n        last_name,\n        password\n      } = this.state; // console.log(\"New user form Submitted!\");\n\n      if (this.validate()) {\n        this.props.createUser({\n          user: {\n            username: username,\n            first_name: first_name,\n            last_name: last_name,\n            password: password\n          }\n        });\n      }\n    };\n\n    this.handleOnChange = event => {\n      // console.log(event.target.value);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.renderErrors = () => {\n      let errorElements = null;\n\n      if (this.state.errors) {\n        console.log(\"Render Errors: \", this.state.errors); // for (const error of this.state.errors) {\n        //   errorElements.push(<h3 className=\"error_text\">{error}</h3>);\n        // }\n        // errorElements = this.state.errors.map((error, id) => {\n        //   return (\n        //     <h3 className=\"error_text\" key={id}>\n        //       {error}\n        //     </h3>\n        //   );\n        // });\n      }\n\n      return errorElements;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderErrors()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first_name\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"first_name\",\n          name: \"first_name\",\n          value: this.state.first_name,\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"last_name\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"last_name\",\n          name: \"last_name\",\n          value: this.state.last_name,\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password_confirmation\",\n          children: \"Confirm Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password_confirmation\",\n          name: \"password_confirmation\",\n          value: this.state.password_confirmation,\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  validate() {\n    let isValid = true;\n    let errors = {}; // let errors = this.state.errors\n\n    this.setState({\n      errors: []\n    }); // check fields TODO:\n    // if (this.state.password !== this.state.password_confirmation) {\n    //   this.setState({ errors: { password: \"Passwords do not match.\" } });\n    //   return false;\n    // } else {\n    //   this.setState({ errors: \"\" });\n    //   return true;\n    // }\n    // Check username\n\n    if (this.state.username === \"\") {\n      isValid = false;\n      errors[\"username\"] = \"Please enter a username\"; // this.setState({\n      //   errors: this.state.errors.push({ username: \"Please enter a username\" }),\n      //   // errors: { ...this.state.errors, username: \"Please enter a username\" },\n      // });\n    } // Check first name\n\n\n    if (this.state.first_name === \"\") {\n      isValid = false;\n      errors[\"first_name\"] = \"Please enter your first name\"; // this.setState({\n      //   errors: this.state.errors.push({\n      //     first_name: \"Please enter your first name\",\n      //   }),\n      // errors: {\n      //   ...this.state.errors,\n      //   // first_name: \"Please enter your first name\",\n      // },\n      // });\n    } // Check last name\n\n\n    if (this.state.last_name === \"\") {\n      isValid = false;\n      errors[\"last_name\"] = \"Please enter your last name\"; // this.setState({\n      //   errors: this.state.errors.push({\n      //     last_name: \"Please enter your last name\",\n      //   }),\n      // });\n    } // check password\n\n\n    if (this.state.password === \"\") {\n      isValid = false;\n      errors[\"password\"] = \"Please enter a password\"; // this.setState({\n      //   errors: this.state.errors.push({ password: \"Please enter a password\" }),\n      // });\n    } // check password confirmation\n\n\n    if (this.state.password_confirmation !== this.state.password) {\n      isValid = false;\n      errors[\"password_confirmation\"] = \"Passwords do not match\"; // this.setState({\n      //   errors: this.state.errors.push({ password: \"Passwords do not match\" }),\n      // });\n    }\n\n    console.log(errors);\n    this.setState({\n      errors: errors\n    });\n    console.log(\"Errors: \", this.state.errors);\n    return isValid;\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createUser: userData => dispatch(createUser(userData))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewUserForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newUserForm.js"],"names":["React","Component","connect","createUser","NewUserForm","state","username","password","first_name","last_name","password_confirmation","errors","handleOnSubmit","event","preventDefault","validate","props","user","handleOnChange","setState","target","name","value","renderErrors","errorElements","console","log","render","isValid","mapDispatchToProps","dispatch","userData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,qBAAqB,EAAE,EALjB;AAMNC,MAAAA,MAAM,EAAE;AANF,KAD0B;;AAAA,SA8DlCC,cA9DkC,GA8DhBC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAER,QAAAA,QAAF;AAAYE,QAAAA,UAAZ;AAAwBC,QAAAA,SAAxB;AAAmCF,QAAAA;AAAnC,UAAgD,KAAKF,KAA3D,CAF0B,CAG1B;;AACA,UAAI,KAAKU,QAAL,EAAJ,EAAqB;AACnB,aAAKC,KAAL,CAAWb,UAAX,CAAsB;AACpBc,UAAAA,IAAI,EAAE;AACJX,YAAAA,QAAQ,EAAEA,QADN;AAEJE,YAAAA,UAAU,EAAEA,UAFR;AAGJC,YAAAA,SAAS,EAAEA,SAHP;AAIJF,YAAAA,QAAQ,EAAEA;AAJN;AADc,SAAtB;AAQD;AACF,KA5EiC;;AAAA,SAqJlCW,cArJkC,GAqJhBL,KAAD,IAAW;AAC1B;AACA,WAAKM,QAAL,CAAc;AACZ,SAACN,KAAK,CAACO,MAAN,CAAaC,IAAd,GAAqBR,KAAK,CAACO,MAAN,CAAaE;AADtB,OAAd;AAGD,KA1JiC;;AAAA,SA4JlCC,YA5JkC,GA4JnB,MAAM;AACnB,UAAIC,aAAa,GAAG,IAApB;;AACA,UAAI,KAAKnB,KAAL,CAAWM,MAAf,EAAuB;AACrBc,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKrB,KAAL,CAAWM,MAA1C,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,aAAOa,aAAP;AACD,KA7KiC;AAAA;;AAUlCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAM,KAAKJ,YAAL;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKX,cAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKY;AALjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,YAFL;AAGE,UAAA,IAAI,EAAC,YAHP;AAIE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,UAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKU;AALjB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAiBE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,WAFL;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,SAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKS;AALjB;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAyBE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA0BE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,QAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKW;AALjB;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAiCE;AAAO,UAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,eAkCE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,uBAFL;AAGE,UAAA,IAAI,EAAC,uBAHP;AAIE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWK,qBAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKQ;AALjB;AAAA;AAAA;AAAA;AAAA,gBAlCF,eA0CE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiDD;;AAkBDH,EAAAA,QAAQ,GAAG;AACT,QAAIa,OAAO,GAAG,IAAd;AACA,QAAIjB,MAAM,GAAG,EAAb,CAFS,CAGT;;AACA,SAAKQ,QAAL,CAAc;AACZR,MAAAA,MAAM,EAAE;AADI,KAAd,EAJS,CAOT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,KAAKN,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC;AAC9BsB,MAAAA,OAAO,GAAG,KAAV;AACAjB,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,yBAArB,CAF8B,CAG9B;AACA;AACA;AACA;AACD,KAvBQ,CAwBT;;;AACA,QAAI,KAAKN,KAAL,CAAWG,UAAX,KAA0B,EAA9B,EAAkC;AAChCoB,MAAAA,OAAO,GAAG,KAAV;AACAjB,MAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,8BAAvB,CAFgC,CAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArCQ,CAsCT;;;AACA,QAAI,KAAKN,KAAL,CAAWI,SAAX,KAAyB,EAA7B,EAAiC;AAC/BmB,MAAAA,OAAO,GAAG,KAAV;AACAjB,MAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,6BAAtB,CAF+B,CAG/B;AACA;AACA;AACA;AACA;AACD,KA/CQ,CAgDT;;;AACA,QAAI,KAAKN,KAAL,CAAWE,QAAX,KAAwB,EAA5B,EAAgC;AAC9BqB,MAAAA,OAAO,GAAG,KAAV;AACAjB,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,yBAArB,CAF8B,CAG9B;AACA;AACA;AACD,KAvDQ,CAwDT;;;AACA,QAAI,KAAKN,KAAL,CAAWK,qBAAX,KAAqC,KAAKL,KAAL,CAAWE,QAApD,EAA8D;AAC5DqB,MAAAA,OAAO,GAAG,KAAV;AACAjB,MAAAA,MAAM,CAAC,uBAAD,CAAN,GAAkC,wBAAlC,CAF4D,CAG5D;AACA;AACA;AACD;;AAEDc,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACA,SAAKQ,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKrB,KAAL,CAAWM,MAAnC;AACA,WAAOiB,OAAP;AACD;;AAnJiC;;AAgLpC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL3B,IAAAA,UAAU,EAAG4B,QAAD,IAAcD,QAAQ,CAAC3B,UAAU,CAAC4B,QAAD,CAAX;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCzB,WAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../../actions/authActions\";\n\nclass NewUserForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password_confirmation: \"\",\n    errors: {},\n  };\n\n  render() {\n    return (\n      <div>\n        <div>{this.renderErrors()}</div>\n        <form onSubmit={this.handleOnSubmit}>\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleOnChange}\n          />\n          <label htmlFor=\"first_name\">First Name: </label>\n          <input\n            type=\"text\"\n            id=\"first_name\"\n            name=\"first_name\"\n            value={this.state.first_name}\n            onChange={this.handleOnChange}\n          />\n          <label htmlFor=\"last_name\">Last Name: </label>\n          <input\n            type=\"text\"\n            id=\"last_name\"\n            name=\"last_name\"\n            value={this.state.last_name}\n            onChange={this.handleOnChange}\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleOnChange}\n          />\n          <label htmlFor=\"password_confirmation\">Confirm Password: </label>\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            name=\"password_confirmation\"\n            value={this.state.password_confirmation}\n            onChange={this.handleOnChange}\n          />\n          {/* <p>{this.state.errors}</p> */}\n          <input type=\"submit\" value=\"Create User\" />\n        </form>\n      </div>\n    );\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const { username, first_name, last_name, password } = this.state;\n    // console.log(\"New user form Submitted!\");\n    if (this.validate()) {\n      this.props.createUser({\n        user: {\n          username: username,\n          first_name: first_name,\n          last_name: last_name,\n          password: password,\n        },\n      });\n    }\n  };\n\n  validate() {\n    let isValid = true;\n    let errors = {};\n    // let errors = this.state.errors\n    this.setState({\n      errors: [],\n    });\n    // check fields TODO:\n    // if (this.state.password !== this.state.password_confirmation) {\n    //   this.setState({ errors: { password: \"Passwords do not match.\" } });\n    //   return false;\n    // } else {\n    //   this.setState({ errors: \"\" });\n    //   return true;\n    // }\n    // Check username\n    if (this.state.username === \"\") {\n      isValid = false;\n      errors[\"username\"] = \"Please enter a username\";\n      // this.setState({\n      //   errors: this.state.errors.push({ username: \"Please enter a username\" }),\n      //   // errors: { ...this.state.errors, username: \"Please enter a username\" },\n      // });\n    }\n    // Check first name\n    if (this.state.first_name === \"\") {\n      isValid = false;\n      errors[\"first_name\"] = \"Please enter your first name\";\n      // this.setState({\n      //   errors: this.state.errors.push({\n      //     first_name: \"Please enter your first name\",\n      //   }),\n      // errors: {\n      //   ...this.state.errors,\n      //   // first_name: \"Please enter your first name\",\n      // },\n      // });\n    }\n    // Check last name\n    if (this.state.last_name === \"\") {\n      isValid = false;\n      errors[\"last_name\"] = \"Please enter your last name\";\n      // this.setState({\n      //   errors: this.state.errors.push({\n      //     last_name: \"Please enter your last name\",\n      //   }),\n      // });\n    }\n    // check password\n    if (this.state.password === \"\") {\n      isValid = false;\n      errors[\"password\"] = \"Please enter a password\";\n      // this.setState({\n      //   errors: this.state.errors.push({ password: \"Please enter a password\" }),\n      // });\n    }\n    // check password confirmation\n    if (this.state.password_confirmation !== this.state.password) {\n      isValid = false;\n      errors[\"password_confirmation\"] = \"Passwords do not match\";\n      // this.setState({\n      //   errors: this.state.errors.push({ password: \"Passwords do not match\" }),\n      // });\n    }\n\n    console.log(errors);\n    this.setState({ errors: errors });\n    console.log(\"Errors: \", this.state.errors);\n    return isValid;\n  }\n\n  handleOnChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  renderErrors = () => {\n    let errorElements = null;\n    if (this.state.errors) {\n      console.log(\"Render Errors: \", this.state.errors);\n      // for (const error of this.state.errors) {\n      //   errorElements.push(<h3 className=\"error_text\">{error}</h3>);\n      // }\n      // errorElements = this.state.errors.map((error, id) => {\n      //   return (\n      //     <h3 className=\"error_text\" key={id}>\n      //       {error}\n      //     </h3>\n      //   );\n      // });\n    }\n\n    return errorElements;\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createUser: (userData) => dispatch(createUser(userData)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewUserForm);\n"]},"metadata":{},"sourceType":"module"}