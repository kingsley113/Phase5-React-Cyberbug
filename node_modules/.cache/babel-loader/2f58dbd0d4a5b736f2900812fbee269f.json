{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newUserForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { createUser } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewUserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      // password_confirmation: \"\",\n      first_name: \"\",\n      last_name: \"\" // errors: \"\",\n\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      console.log(\"New user form Submitted!\"); // if (this.validate()) {\n      //   //TODO: Submit to dispatch action\n      // } else {\n      //   alert(\"Passwords must match\");\n      // }\n\n      this.props.createUser({\n        user: this.state\n      });\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    if (localStorage.getItem(\"jwt\")) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first_name\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"first_name\",\n            name: \"first_name\",\n            value: this.state.first_name,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last_name\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"last_name\",\n            name: \"last_name\",\n            value: this.state.last_name,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  validate() {\n    // check fields TODO:\n    if (this.state.password !== this.state.password_confirmation) {\n      this.setState({\n        errors: {\n          password: \"Passwords do not match.\"\n        }\n      });\n      return false;\n    } else {\n      this.setState({\n        errors: \"\"\n      });\n      return true;\n    }\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createUser: userData => dispatch(createUser(userData))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewUserForm);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/forms/newUserForm.js"],"names":["React","Component","connect","Redirect","createUser","NewUserForm","state","username","password","first_name","last_name","handleOnSubmit","event","preventDefault","console","log","props","user","handleOnChange","setState","target","name","value","render","localStorage","getItem","errors","validate","password_confirmation","mapDispatchToProps","dispatch","userData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGN;AACAC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,SAAS,EAAE,EALL,CAMN;;AANM,KAD0B;;AAAA,SAiElCC,cAjEkC,GAiEhBC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAF0B,CAG1B;AACA;AACA;AACA;AACA;;AACA,WAAKC,KAAL,CAAWZ,UAAX,CAAsB;AAAEa,QAAAA,IAAI,EAAE,KAAKX;AAAb,OAAtB;AACD,KA1EiC;;AAAA,SAuFlCY,cAvFkC,GAuFhBN,KAAD,IAAW;AAC1B,WAAKO,QAAL,CAAc;AACZ,SAACP,KAAK,CAACQ,MAAN,CAAaC,IAAd,GAAqBT,KAAK,CAACQ,MAAN,CAAaE;AADtB,OAAd;AAGD,KA3FiC;AAAA;;AAUlCC,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAE,KAAKd,cAArB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKW;AALjB;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,YAFL;AAGE,YAAA,IAAI,EAAC,YAHP;AAIE,YAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWG,UAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKS;AALjB;AAAA;AAAA;AAAA;AAAA,kBAVF,eAiBE;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAkBE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,WAFL;AAGE,YAAA,IAAI,EAAC,WAHP;AAIE,YAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWI,SAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKQ;AALjB;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAyBE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF,eA0BE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,QAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKU;AALjB;AAAA;AAAA;AAAA;AAAA,kBA1BF,eAyCE;AAAA,sBAAI,KAAKZ,KAAL,CAAWoB;AAAf;AAAA;AAAA;AAAA;AAAA,kBAzCF,eA0CE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAgDD;AACF;;AAaDC,EAAAA,QAAQ,GAAG;AACT;AACA,QAAI,KAAKrB,KAAL,CAAWE,QAAX,KAAwB,KAAKF,KAAL,CAAWsB,qBAAvC,EAA8D;AAC5D,WAAKT,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAE;AAAElB,UAAAA,QAAQ,EAAE;AAAZ;AAAV,OAAd;AACA,aAAO,KAAP;AACD,KAHD,MAGO;AACL,WAAKW,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,aAAO,IAAP;AACD;AACF;;AArFiC;;AA8FpC,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL1B,IAAAA,UAAU,EAAG2B,QAAD,IAAcD,QAAQ,CAAC1B,UAAU,CAAC2B,QAAD,CAAX;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCxB,WAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { createUser } from \"../../actions/authActions\";\n\nclass NewUserForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    // password_confirmation: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    // errors: \"\",\n  };\n\n  render() {\n    if (localStorage.getItem(\"jwt\")) {\n      return <Redirect to=\"/dashboard\" />;\n    } else {\n      return (\n        <div>\n          <form onSubmit={this.handleOnSubmit}>\n            <label htmlFor=\"username\">Username: </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleOnChange}\n            />\n            <label htmlFor=\"first_name\">First Name: </label>\n            <input\n              type=\"text\"\n              id=\"first_name\"\n              name=\"first_name\"\n              value={this.state.first_name}\n              onChange={this.handleOnChange}\n            />\n            <label htmlFor=\"last_name\">Last Name: </label>\n            <input\n              type=\"text\"\n              id=\"last_name\"\n              name=\"last_name\"\n              value={this.state.last_name}\n              onChange={this.handleOnChange}\n            />\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleOnChange}\n            />\n            {/* <label htmlFor=\"password_confirmation\">Confirm Password: </label>\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            name=\"password_confirmation\"\n            value={this.state.password_confirmation}\n            onChange={this.handleOnChange}\n          /> */}\n            <p>{this.state.errors}</p>\n            <input type=\"submit\" value=\"Create User\" />\n          </form>\n        </div>\n      );\n    }\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"New user form Submitted!\");\n    // if (this.validate()) {\n    //   //TODO: Submit to dispatch action\n    // } else {\n    //   alert(\"Passwords must match\");\n    // }\n    this.props.createUser({ user: this.state });\n  };\n\n  validate() {\n    // check fields TODO:\n    if (this.state.password !== this.state.password_confirmation) {\n      this.setState({ errors: { password: \"Passwords do not match.\" } });\n      return false;\n    } else {\n      this.setState({ errors: \"\" });\n      return true;\n    }\n  }\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createUser: (userData) => dispatch(createUser(userData)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewUserForm);\n"]},"metadata":{},"sourceType":"module"}