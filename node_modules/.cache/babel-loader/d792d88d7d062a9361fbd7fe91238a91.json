{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-border\",\n      id: \"priority-tasks-panel\",\n      children: [\"--This is the priority tasks component :)\", /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bug Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderPriorityTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderPriorityTableRows() {\n    if (this.props.bugs) {\n      let bugArray = []; // create array sorted by priority\n      // Critical\n\n      let criticalBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Critical\" && bug.bugDueDate); // then sort within each priority by due date\n\n      criticalBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(criticalBugs); // console.log(criticalBugs);\n      // High\n\n      let highBugs = this.props.bugs.filter(bug => bug.bugPriority === \"High\" && bug.bugDueDate); // then sort within each priority by due date\n\n      highBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(highBugs); // console.log(criticalBugs);\n      // Medium\n\n      let mediumBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Medium\" && bug.bugDueDate); // then sort within each priority by due date\n\n      mediumBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(mediumBugs); // console.log(criticalBugs);\n      // Low\n\n      let lowBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Low\" && bug.bugDueDate); // then sort within each priority by due date\n\n      lowBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(lowBugs); // console.log(criticalBugs);\n\n      return bugArray.map((bug, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugPriority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugDueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.project_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      }); // return elements;\n    }\n  }\n\n}\n\nexport default PriorityTasks;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js"],"names":["React","Component","PriorityTasks","render","renderPriorityTableRows","props","bugs","bugArray","criticalBugs","filter","bug","bugPriority","bugDueDate","sort","firstBug","secondBug","Date","push","highBugs","mediumBugs","lowBugs","map","index","bugId","bugtitle","bugStatus","project_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return (\n      <div className=\"test-border\" id=\"priority-tasks-panel\">\n        --This is the priority tasks component :)\n        {/* TODO: fill in content */}\n        <table>\n          <thead>\n            <tr>\n              <th>Bug Id</th>\n              <th>Title</th>\n              <th>Priority</th>\n              <th>Due Date</th>\n              <th>Status</th>\n              <th>Project</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderPriorityTableRows()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderPriorityTableRows() {\n    if (this.props.bugs) {\n      let bugArray = [];\n      // create array sorted by priority\n      // Critical\n      let criticalBugs = this.props.bugs.filter(\n        (bug) => bug.bugPriority === \"Critical\" && bug.bugDueDate\n      );\n      // then sort within each priority by due date\n      criticalBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(criticalBugs);\n      // console.log(criticalBugs);\n\n      // High\n      let highBugs = this.props.bugs.filter(\n        (bug) => bug.bugPriority === \"High\" && bug.bugDueDate\n      );\n      // then sort within each priority by due date\n      highBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(highBugs);\n      // console.log(criticalBugs);\n\n      // Medium\n      let mediumBugs = this.props.bugs.filter(\n        (bug) => bug.bugPriority === \"Medium\" && bug.bugDueDate\n      );\n      // then sort within each priority by due date\n      mediumBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(mediumBugs);\n      // console.log(criticalBugs);\n\n      // Low\n      let lowBugs = this.props.bugs.filter(\n        (bug) => bug.bugPriority === \"Low\" && bug.bugDueDate\n      );\n      // then sort within each priority by due date\n      lowBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray.push(lowBugs);\n      // console.log(criticalBugs);\n\n      return bugArray.map((bug, index) => {\n        return (\n          <tr key={index}>\n            <td>{bug.bugId}</td>\n            <td>{bug.bugtitle}</td>\n            <td>{bug.bugPriority}</td>\n            <td>{bug.bugDueDate}</td>\n            <td>{bug.bugStatus}</td>\n            <td>{bug.project_id}</td>\n          </tr>\n        );\n      });\n\n      // return elements;\n    }\n  }\n}\n\nexport default PriorityTasks;\n"]},"metadata":{},"sourceType":"module"}