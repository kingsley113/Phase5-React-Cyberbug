{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js\";\nimport React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { connect } from \"react-redux\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\"; // import Button from \"react-bootstrap/Button\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectStatus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: this.calcProgressChartData()\n    };\n  }\n\n  render() {\n    if (this.props.project && this.props.bugs) {\n      return /*#__PURE__*/_jsxDEV(ProgressBar, {\n        id: \"project-progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"warning\" // now={this.calcProgressChartData()[0]}\n          ,\n          now: this.state.chartData[0],\n          label: \"Open\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"danger\" // now={this.calcProgressChartData()[1]}\n          ,\n          now: this.state.chartData[1],\n          label: \"Overdue\"\n        }, 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\" // now={this.calcProgressChartData()[2]}\n          ,\n          now: this.state.chartData[2],\n          label: \"Closed\"\n        }, 3, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(this.props.project, this.props.bugs); // console.log(data);\n\n      return data;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // project: state.projects.activeProject,\n    bugs: state.bugs.allBugs\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectStatus);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/project/projectStatus.js"],"names":["React","Component","ProgressBar","connect","generateProjectStatusBarData","ProjectStatus","state","chartData","calcProgressChartData","render","props","project","bugs","data","mapStateToProps","allBugs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,4BAAT,QAA6C,8BAA7C,C,CACA;;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACNC,MAAAA,SAAS,EAAE,KAAKC,qBAAL;AADL,KAD4B;AAAA;;AAIpCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,0BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,sBAAhB;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,SAFV,CAGE;AAHF;AAIE,UAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAJP;AAME,UAAA,KAAK,EAAC;AANR,WAKO,CALP;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,QAFV,CAGE;AAHF;AAIE,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAJP;AAME,UAAA,KAAK,EAAC;AANR,WAKO,CALP;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAC,SAFV,CAGE;AAHF;AAIE,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAJP;AAME,UAAA,KAAK,EAAC;AANR,WAKO,CALP;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA4BD,KA7BD,MA6BO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,QAAI,KAAKE,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,IAArC,EAA2C;AACzC,YAAMC,IAAI,GAAGT,4BAA4B,CACvC,KAAKM,KAAL,CAAWC,OAD4B,EAEvC,KAAKD,KAAL,CAAWE,IAF4B,CAAzC,CADyC,CAKzC;;AACA,aAAOC,IAAP;AACD;AACF;;AAhDmC;;AAmDtC,MAAMC,eAAe,GAAIR,KAAD,IAAW;AACjC,SAAO;AACL;AACAM,IAAAA,IAAI,EAAEN,KAAK,CAACM,IAAN,CAAWG;AAFZ,GAAP;AAID,CALD;;AAOA,eAAeZ,OAAO,CAACW,eAAD,CAAP,CAAyBT,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { connect } from \"react-redux\";\nimport { generateProjectStatusBarData } from \"../../helpers/projectHelpers\";\n// import Button from \"react-bootstrap/Button\";\n\nclass ProjectStatus extends Component {\n  state = {\n    chartData: this.calcProgressChartData(),\n  };\n  render() {\n    if (this.props.project && this.props.bugs) {\n      return (\n        <ProgressBar id=\"project-progress-bar\">\n          <ProgressBar\n            striped\n            variant=\"warning\"\n            // now={this.calcProgressChartData()[0]}\n            now={this.state.chartData[0]}\n            key={1}\n            label=\"Open\"\n          />\n          <ProgressBar\n            striped\n            variant=\"danger\"\n            // now={this.calcProgressChartData()[1]}\n            now={this.state.chartData[1]}\n            key={2}\n            label=\"Overdue\"\n          />\n          <ProgressBar\n            striped\n            variant=\"success\"\n            // now={this.calcProgressChartData()[2]}\n            now={this.state.chartData[2]}\n            key={3}\n            label=\"Closed\"\n          />\n        </ProgressBar>\n      );\n    } else {\n      return <p>Loading Chart</p>;\n    }\n  }\n\n  calcProgressChartData() {\n    if (this.props.project && this.props.bugs) {\n      const data = generateProjectStatusBarData(\n        this.props.project,\n        this.props.bugs\n      );\n      // console.log(data);\n      return data;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // project: state.projects.activeProject,\n    bugs: state.bugs.allBugs,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectStatus);\n"]},"metadata":{},"sourceType":"module"}