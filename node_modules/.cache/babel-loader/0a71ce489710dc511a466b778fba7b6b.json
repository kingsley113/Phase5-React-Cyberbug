{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-border\",\n      id: \"priority-tasks-panel\",\n      children: [\"--This is the priority tasks component :)\", /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bug Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderPriorityTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  sortByDate(firstBug, secondBug) {\n    return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n  }\n\n  renderPriorityTableRows() {\n    if (this.props.bugs) {\n      let bugArray = []; // Critical\n\n      let criticalBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Critical\" && bug.bugDueDate && !bug.bugComplete); // criticalBugs.sort((firstBug, secondBug) => {\n      //   return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      // });\n\n      criticalBugs.sort(this.sortByDate());\n      bugArray = bugArray.concat(criticalBugs); // High\n\n      let highBugs = this.props.bugs.filter(bug => bug.bugPriority === \"High\" && bug.bugDueDate && !bug.bugComplete);\n      highBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(highBugs); // Medium\n\n      let mediumBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Medium\" && bug.bugDueDate && !bug.bugComplete);\n      mediumBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(mediumBugs); // Low\n\n      let lowBugs = this.props.bugs.filter(bug => bug.bugPriority === \"Low\" && bug.bugDueDate && !bug.bugComplete);\n      lowBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(lowBugs); // Generate table elements and return first 10\n\n      return bugArray.map((bug, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/projects/${this.getProjectIdCode(bug.project_id)}/${bug.bugId}`,\n              children: bug.bugId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugPriority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugDueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bug.bugStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.getProjectIdCode(bug.project_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }).slice(0, 10);\n    }\n  }\n\n  getProjectIdCode(id) {\n    return this.props.projects.filter(project => project.id === id)[0].projectId;\n  }\n\n}\n\nexport default PriorityTasks;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/components/dashboard/priorityTasks.js"],"names":["React","Component","Link","PriorityTasks","render","renderPriorityTableRows","sortByDate","firstBug","secondBug","Date","bugDueDate","props","bugs","bugArray","criticalBugs","filter","bug","bugPriority","bugComplete","sort","concat","highBugs","mediumBugs","lowBugs","map","index","getProjectIdCode","project_id","bugId","bugTitle","bugStatus","slice","id","projects","project","projectId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass PriorityTasks extends Component {\n  render() {\n    return (\n      <div className=\"test-border\" id=\"priority-tasks-panel\">\n        --This is the priority tasks component :)\n        {/* TODO: fill in content */}\n        <table>\n          <thead>\n            <tr>\n              <th>Bug Id</th>\n              <th>Title</th>\n              <th>Priority</th>\n              <th>Due Date</th>\n              <th>Status</th>\n              <th>Project</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderPriorityTableRows()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n  sortByDate(firstBug, secondBug) {\n    return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n  }\n\n  renderPriorityTableRows() {\n    if (this.props.bugs) {\n      let bugArray = [];\n\n      // Critical\n      let criticalBugs = this.props.bugs.filter(\n        (bug) =>\n          bug.bugPriority === \"Critical\" && bug.bugDueDate && !bug.bugComplete\n      );\n      // criticalBugs.sort((firstBug, secondBug) => {\n      //   return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      // });\n      criticalBugs.sort(this.sortByDate());\n      bugArray = bugArray.concat(criticalBugs);\n\n      // High\n      let highBugs = this.props.bugs.filter(\n        (bug) =>\n          bug.bugPriority === \"High\" && bug.bugDueDate && !bug.bugComplete\n      );\n      highBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(highBugs);\n\n      // Medium\n      let mediumBugs = this.props.bugs.filter(\n        (bug) =>\n          bug.bugPriority === \"Medium\" && bug.bugDueDate && !bug.bugComplete\n      );\n      mediumBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(mediumBugs);\n\n      // Low\n      let lowBugs = this.props.bugs.filter(\n        (bug) => bug.bugPriority === \"Low\" && bug.bugDueDate && !bug.bugComplete\n      );\n      lowBugs.sort((firstBug, secondBug) => {\n        return new Date(firstBug.bugDueDate) - new Date(secondBug.bugDueDate);\n      });\n      bugArray = bugArray.concat(lowBugs);\n\n      // Generate table elements and return first 10\n      return bugArray\n        .map((bug, index) => {\n          return (\n            <tr key={index}>\n              <td>\n                <Link\n                  to={`/projects/${this.getProjectIdCode(bug.project_id)}/${\n                    bug.bugId\n                  }`}\n                >\n                  {bug.bugId}\n                </Link>\n              </td>\n              <td>{bug.bugTitle}</td>\n              <td>{bug.bugPriority}</td>\n              <td>{bug.bugDueDate}</td>\n              <td>{bug.bugStatus}</td>\n              <td>{this.getProjectIdCode(bug.project_id)}</td>\n            </tr>\n          );\n        })\n        .slice(0, 10);\n    }\n  }\n\n  getProjectIdCode(id) {\n    return this.props.projects.filter((project) => project.id === id)[0]\n      .projectId;\n  }\n}\n\nexport default PriorityTasks;\n"]},"metadata":{},"sourceType":"module"}