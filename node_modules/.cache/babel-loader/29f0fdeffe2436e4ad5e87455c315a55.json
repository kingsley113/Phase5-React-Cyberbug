{"ast":null,"code":"function projects(state = {\n  projects: []\n}, action) {\n  switch (action.type) {\n    case \"ADD_PROJECT\":\n      // return { allProjects: state.concat(action.project) };\n      return {\n        allProjects: [...state.allProjects, action.project]\n      };\n\n    case \"LOAD_PROJECTS\":\n      return {\n        allProjects: state.projects.concat(action.projects)\n      };\n\n    case \"EDIT_PROJECT\":\n      return state;\n\n    case \"DELETE_PROJECT\":\n      return state;\n\n    case \"ADD_BUG_TO_PROJECT\":\n      return state;\n\n    case \"REMOVE_BUG_FROM_PROJECT\":\n      return state;\n\n    case \"SET_ACTIVE_PROJECT\":\n      let activeProject = null;\n      console.log(\"setting active project\");\n      console.log(action);\n      const updatedProjects = [...state.allProjects].map(project => {\n        project.activeProject = false;\n\n        if (project.id === parseInt(action.id)) {\n          project.activeProject = true;\n          activeProject = project;\n        }\n\n        return project;\n      });\n      return {\n        allProjects: updatedProjects,\n        activeProject: activeProject\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projects;","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/reducers/projectsReducer.js"],"names":["projects","state","action","type","allProjects","project","concat","activeProject","console","log","updatedProjects","map","id","parseInt"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,KAAK,GAAG;AAAED,EAAAA,QAAQ,EAAE;AAAZ,CAA1B,EAA4CE,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE;AACA,aAAO;AAAEC,QAAAA,WAAW,EAAE,CAAC,GAAGH,KAAK,CAACG,WAAV,EAAuBF,MAAM,CAACG,OAA9B;AAAf,OAAP;;AACF,SAAK,eAAL;AACE,aAAO;AAAED,QAAAA,WAAW,EAAEH,KAAK,CAACD,QAAN,CAAeM,MAAf,CAAsBJ,MAAM,CAACF,QAA7B;AAAf,OAAP;;AACF,SAAK,cAAL;AACE,aAAOC,KAAP;;AACF,SAAK,gBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,oBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,yBAAL;AACE,aAAOA,KAAP;;AACF,SAAK,oBAAL;AACE,UAAIM,aAAa,GAAG,IAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,YAAMQ,eAAe,GAAG,CAAC,GAAGT,KAAK,CAACG,WAAV,EAAuBO,GAAvB,CAA4BN,OAAD,IAAa;AAC9DA,QAAAA,OAAO,CAACE,aAAR,GAAwB,KAAxB;;AACA,YAAIF,OAAO,CAACO,EAAR,KAAeC,QAAQ,CAACX,MAAM,CAACU,EAAR,CAA3B,EAAwC;AACtCP,UAAAA,OAAO,CAACE,aAAR,GAAwB,IAAxB;AACAA,UAAAA,aAAa,GAAGF,OAAhB;AACD;;AACD,eAAOA,OAAP;AACD,OAPuB,CAAxB;AAQA,aAAO;AAAED,QAAAA,WAAW,EAAEM,eAAf;AAAgCH,QAAAA,aAAa,EAAEA;AAA/C,OAAP;;AACF;AACE,aAAON,KAAP;AA5BJ;AA8BD;;AAED,eAAeD,QAAf","sourcesContent":["function projects(state = { projects: [] }, action) {\n  switch (action.type) {\n    case \"ADD_PROJECT\":\n      // return { allProjects: state.concat(action.project) };\n      return { allProjects: [...state.allProjects, action.project] };\n    case \"LOAD_PROJECTS\":\n      return { allProjects: state.projects.concat(action.projects) };\n    case \"EDIT_PROJECT\":\n      return state;\n    case \"DELETE_PROJECT\":\n      return state;\n    case \"ADD_BUG_TO_PROJECT\":\n      return state;\n    case \"REMOVE_BUG_FROM_PROJECT\":\n      return state;\n    case \"SET_ACTIVE_PROJECT\":\n      let activeProject = null;\n      console.log(\"setting active project\");\n      console.log(action);\n      const updatedProjects = [...state.allProjects].map((project) => {\n        project.activeProject = false;\n        if (project.id === parseInt(action.id)) {\n          project.activeProject = true;\n          activeProject = project;\n        }\n        return project;\n      });\n      return { allProjects: updatedProjects, activeProject: activeProject };\n    default:\n      return state;\n  }\n}\n\nexport default projects;\n"]},"metadata":{},"sourceType":"module"}