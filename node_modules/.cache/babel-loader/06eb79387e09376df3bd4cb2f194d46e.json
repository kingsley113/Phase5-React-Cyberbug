{"ast":null,"code":"var _jsxFileName = \"/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pageContent.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Dashboard from \"./pages/dashboard\";\nimport ProjectPage from \"./pages/projectPage\";\nimport SettingsPage from \"./pages/settingsPage\";\nimport ProjectsPage from \"./pages/projectsPage\";\nimport ProjectForm from \"../components/forms/projectForm\";\nimport ModalWindow from \"./modalWindow\";\nimport Toggle from \"./toggle\";\nimport PageHeader from \"../components/pageHeader\";\nimport PageSidebar from \"../components/pageSidebar\";\nimport { loadProjects } from \"../actions/projectActions\";\nimport { loadBugs } from \"../actions/bugActions\";\nimport ProtectedRoute from \"../components/auth/protectedRoute\";\nimport RedirectIfLoggedIn from \"../components/auth/redirectIfLoggedIn\";\nimport PageNotFound from \"./pages/pageNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PageContent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PageHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-main\",\n        children: [/*#__PURE__*/_jsxDEV(PageSidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-width\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: () => /*#__PURE__*/_jsxDEV(RedirectIfLoggedIn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/dashboard\",\n              render: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n                projects: this.props.projects,\n                bugs: this.props.bugs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/projects\",\n              render: () => /*#__PURE__*/_jsxDEV(ProjectsPage, {\n                projects: this.props.projects,\n                bugs: this.props.bugs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/projects/:id\",\n              render: routerProps => /*#__PURE__*/_jsxDEV(ProjectPage, { ...routerProps,\n                projects: this.props.projects,\n                activeProject: this.props.activeProject,\n                bugs: this.props.bugs,\n                activeBug: this.props.activeBug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/settings\",\n              component: SettingsPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              component: PageNotFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n            id: \"newProjectFormToggle\",\n            children: /*#__PURE__*/_jsxDEV(ModalWindow, {\n              component: /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.props.loadProjects();\n    this.props.loadBugs();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects.allProjects,\n    activeProject: state.projects.activeProject,\n    bugs: state.bugs.allBugs,\n    activeBug: state.bugs.activeBug\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadProjects: () => dispatch(loadProjects()),\n    loadBugs: () => dispatch(loadBugs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContent);","map":{"version":3,"sources":["/Users/cameronkingsley/Flatiron/code/Projects/Phase5-React-Cyberbug/Phase5-React-Cyberbug/cyberbug_frontend/src/containers/pageContent.js"],"names":["React","Component","Route","Switch","connect","Dashboard","ProjectPage","SettingsPage","ProjectsPage","ProjectForm","ModalWindow","Toggle","PageHeader","PageSidebar","loadProjects","loadBugs","ProtectedRoute","RedirectIfLoggedIn","PageNotFound","PageContent","render","props","projects","bugs","routerProps","activeProject","activeBug","componentDidMount","mapStateToProps","state","allProjects","allBugs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Dashboard from \"./pages/dashboard\";\nimport ProjectPage from \"./pages/projectPage\";\nimport SettingsPage from \"./pages/settingsPage\";\nimport ProjectsPage from \"./pages/projectsPage\";\nimport ProjectForm from \"../components/forms/projectForm\";\nimport ModalWindow from \"./modalWindow\";\nimport Toggle from \"./toggle\";\nimport PageHeader from \"../components/pageHeader\";\nimport PageSidebar from \"../components/pageSidebar\";\nimport { loadProjects } from \"../actions/projectActions\";\nimport { loadBugs } from \"../actions/bugActions\";\nimport ProtectedRoute from \"../components/auth/protectedRoute\";\nimport RedirectIfLoggedIn from \"../components/auth/redirectIfLoggedIn\";\nimport PageNotFound from \"./pages/pageNotFound\";\n\nclass PageContent extends Component {\n  render() {\n    return (\n      <ProtectedRoute>\n        <div>\n          <PageHeader />\n        </div>\n        <div className=\"page-main\">\n          <PageSidebar />\n          <div className=\"full-width\">\n            <Switch>\n              <Route exact path=\"/\" render={() => <RedirectIfLoggedIn />} />\n              <Route\n                exact\n                path=\"/dashboard\"\n                render={() => (\n                  <Dashboard\n                    projects={this.props.projects}\n                    bugs={this.props.bugs}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/projects\"\n                render={() => (\n                  <ProjectsPage\n                    projects={this.props.projects}\n                    bugs={this.props.bugs}\n                  />\n                )}\n              />\n              <Route\n                path=\"/projects/:id\"\n                render={(routerProps) => (\n                  <ProjectPage\n                    {...routerProps}\n                    projects={this.props.projects}\n                    activeProject={this.props.activeProject}\n                    bugs={this.props.bugs}\n                    activeBug={this.props.activeBug}\n                  />\n                )}\n              />\n              <Route exact path=\"/settings\" component={SettingsPage} />\n              <Route component={PageNotFound} />\n            </Switch>\n\n            <Toggle id={\"newProjectFormToggle\"}>\n              <ModalWindow component={<ProjectForm />} />\n            </Toggle>\n          </div>\n        </div>\n      </ProtectedRoute>\n    );\n  }\n\n  componentDidMount() {\n    this.props.loadProjects();\n    this.props.loadBugs();\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects.allProjects,\n    activeProject: state.projects.activeProject,\n    bugs: state.bugs.allBugs,\n    activeBug: state.bugs.activeBug,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadProjects: () => dispatch(loadProjects()),\n    loadBugs: () => dispatch(loadBugs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContent);\n"]},"metadata":{},"sourceType":"module"}